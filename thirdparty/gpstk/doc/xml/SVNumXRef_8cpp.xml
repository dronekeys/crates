<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="SVNumXRef_8cpp" kind="file">
    <compoundname>SVNumXRef.cpp</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>GPSTk,<sp/>the<sp/>GPS<sp/>Toolkit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>The<sp/>GPSTk<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>The<sp/>GPSTk<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>License<sp/>along<sp/>with<sp/>GPSTk;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/>02110,<sp/>USA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//<sp/><sp/>Copyright<sp/>2004,<sp/>The<sp/>University<sp/>of<sp/>Texas<sp/>at<sp/>Austin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>SVNumXRefMap.cpp</highlight></codeline>
<codeline lineno="22"><highlight class="comment">*</highlight></codeline>
<codeline lineno="23"><highlight class="comment">*<sp/><sp/><sp/>Applied<sp/>Research<sp/>Laboratories,<sp/>The<sp/>University<sp/>of<sp/>Texas<sp/>at<sp/>Austin</highlight></codeline>
<codeline lineno="24"><highlight class="comment">*</highlight></codeline>
<codeline lineno="25"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Language<sp/>Headers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Library<sp/>Headers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Project<sp/>Headers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="SVNumXRef_8hpp" kindref="compound">SVNumXRef.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="CivilTime_8hpp" kindref="compound">CivilTime.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="TimeString_8hpp" kindref="compound">TimeString.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">gpstk</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">SVNumXRef::SVNumXRef(<sp/>)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/><sp/>1,<sp/><sp/>I<sp/>));<sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/><sp/>2,<sp/><sp/>I<sp/>));</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/><sp/>3,<sp/><sp/>I<sp/>));</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/><sp/>4,<sp/><sp/>I<sp/>));</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/><sp/>5,<sp/><sp/>I<sp/>));</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/><sp/>6,<sp/><sp/>I<sp/>));</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>NAVSTAR<sp/>07,<sp/>I-7<sp/>was<sp/>a<sp/>launch<sp/>failure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/><sp/>8,<sp/><sp/>I<sp/>));</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/><sp/>9,<sp/><sp/>I<sp/>));</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>10,<sp/><sp/>I<sp/>));</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>11,<sp/><sp/>I<sp/>));</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>NAVSTAR<sp/>12,<sp/>was<sp/>never<sp/>launched</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>13,<sp/>II<sp/>));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>14,<sp/>II<sp/>));</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>15,<sp/>II<sp/>));</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>16,<sp/>II<sp/>));</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>17,<sp/>II<sp/>));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>18,<sp/>II<sp/>));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>19,<sp/>II<sp/>));</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>20,<sp/>II<sp/>));</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>21,<sp/>II<sp/>));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>22,IIA<sp/>));</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>23,IIA<sp/>));</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>24,IIA<sp/>));</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>25,IIA<sp/>));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>26,IIA<sp/>));</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>27,IIA<sp/>));</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>28,IIA<sp/>));</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>29,IIA<sp/>));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>30,IIA<sp/>));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>31,IIA<sp/>));</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>32,IIA<sp/>));</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>33,IIA<sp/>));</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>34,IIA<sp/>));</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>35,IIA<sp/>));</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>36,IIA<sp/>));</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>37,IIA<sp/>));</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>38,IIA<sp/>));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>39,IIA<sp/>));</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>40,IIA<sp/>));<sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>41,IIR<sp/>));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>NAVSTAR<sp/>42,<sp/>IIR-1<sp/>was<sp/>a<sp/>launch<sp/>failure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>43,IIR<sp/>));<sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>44,IIR<sp/>));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>45,IIR<sp/>));</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>46,IIR<sp/>));</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>47,IIR<sp/>));</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>48,IIR_M));</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>49,IIR_M));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>50,IIR_M));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>51,IIR<sp/>));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>52,IIR_M));</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>53,IIR_M));</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>54,IIR<sp/>));</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>55,IIR_M));</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>56,IIR<sp/>));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>57,IIR_M));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>58,IIR_M));</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>59,IIR<sp/>));</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>60,IIR<sp/>));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>61,IIR<sp/>));</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>62,IIF<sp/>));<sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>63,IIF<sp/>));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>65,IIF<sp/>));<sp/></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/>NtoBMap.insert(<sp/>make_pair(<sp/>66,IIF<sp/>));<sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>This<sp/>table<sp/>start<sp/>with<sp/>Block<sp/>I<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>NAVSTAR<sp/>-&gt;<sp/>PRN<sp/>ID<sp/>relationship</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NAVSTAR<sp/>ID<sp/>first,<sp/>PRN<sp/>ID<sp/>second</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/><sp/>1,<sp/>XRefNode(<sp/><sp/>4,<sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1978,<sp/><sp/>2,<sp/>22,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1985,<sp/><sp/>7,<sp/>17,<sp/>17,<sp/>30,<sp/><sp/>0.0,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/><sp/>2,<sp/>XRefNode(<sp/><sp/>7,<sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1978,<sp/><sp/>6,<sp/>13,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1988,<sp/><sp/>2,<sp/>12,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/><sp/>3,<sp/>XRefNode(<sp/><sp/>6,<sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1978,<sp/>10,<sp/><sp/>6,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1992,<sp/><sp/>5,<sp/>18,<sp/>23,<sp/>41,<sp/><sp/>0.0,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/><sp/>4,<sp/>XRefNode(<sp/><sp/>8,<sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1978,<sp/>12,<sp/>10,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1990,<sp/><sp/>5,<sp/>31,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/><sp/>5,<sp/>XRefNode(<sp/><sp/>5,<sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1980,<sp/><sp/>2,<sp/><sp/>9,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1984,<sp/><sp/>5,<sp/>11,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/><sp/>6,<sp/>XRefNode(<sp/><sp/>9,<sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1980,<sp/><sp/>4,<sp/>26,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1991,<sp/><sp/>3,<sp/><sp/>6,<sp/><sp/>3,<sp/>42,<sp/><sp/>0.0,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>NAVSTAR<sp/>07,<sp/>I-7<sp/>was<sp/>a<sp/>launch<sp/>failure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/><sp/>8,<sp/>XRefNode(<sp/>11,<sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1983,<sp/><sp/>7,<sp/>14,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1993,<sp/><sp/>5,<sp/><sp/>4,<sp/><sp/>0,<sp/>20,<sp/><sp/>0.0,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/><sp/>9,<sp/>XRefNode(<sp/>13,<sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1984,<sp/><sp/>6,<sp/>13,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1993,<sp/><sp/>5,<sp/><sp/>4,<sp/>18,<sp/>17,<sp/><sp/>0.0,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>10,<sp/>XRefNode(<sp/>12,<sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1984,<sp/><sp/>9,<sp/><sp/>8,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1996,<sp/><sp/>3,<sp/>26,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>11,<sp/>XRefNode(<sp/><sp/>3,<sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1985,<sp/>10,<sp/>30,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1994,<sp/><sp/>4,<sp/>14,<sp/>21,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>NAVSTAR<sp/>12,<sp/>was<sp/>never<sp/>launched</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>13,<sp/>XRefNode(<sp/><sp/>2,<sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1989,<sp/><sp/>6,<sp/>10,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2004,<sp/><sp/>5,<sp/>12,<sp/>17,<sp/><sp/>1,<sp/><sp/>0.0,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>14,<sp/>XRefNode(<sp/>14,<sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1989,<sp/><sp/>2,<sp/>14,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2000,<sp/><sp/>4,<sp/>14,<sp/>13,<sp/>47,<sp/><sp/>0.0,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>15,<sp/>XRefNode(<sp/>15,<sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1990,<sp/>10,<sp/><sp/>1,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2007,<sp/><sp/>3,<sp/>15,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>16,<sp/>XRefNode(<sp/>16,<sp/></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1989,<sp/><sp/>8,<sp/>18,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2000,<sp/>10,<sp/>13,<sp/><sp/>0,<sp/>45,<sp/><sp/>0.0,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>17,<sp/>XRefNode(<sp/>17,<sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1989,<sp/>12,<sp/>11,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2005,<sp/><sp/>2,<sp/>23,<sp/>22,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>18,<sp/>XRefNode(<sp/>18,<sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1990,<sp/><sp/>1,<sp/>24,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2000,<sp/><sp/>8,<sp/>18,<sp/><sp/>7,<sp/>42,<sp/><sp/>0.0,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>19,<sp/>XRefNode(<sp/>19,<sp/></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1989,<sp/>10,<sp/>21,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2001,<sp/><sp/>9,<sp/>11,<sp/>22,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>20,<sp/>XRefNode(<sp/>20,<sp/></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1990,<sp/><sp/>3,<sp/>26,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1996,<sp/>12,<sp/>13,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>21,<sp/>XRefNode(<sp/>21,<sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1990,<sp/><sp/>8,<sp/><sp/>2,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2003,<sp/><sp/>1,<sp/>27,<sp/>22,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>22,<sp/>XRefNode(<sp/>22,<sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1993,<sp/><sp/>2,<sp/><sp/>3,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2003,<sp/><sp/>8,<sp/><sp/>6,<sp/>22,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>23,<sp/>XRefNode(<sp/>23,<sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1990,<sp/>11,<sp/>26,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2004,<sp/><sp/>2,<sp/>13,<sp/>22,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>23,<sp/>XRefNode(<sp/>32,<sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2006,<sp/>12,<sp/><sp/>1,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>24,<sp/>XRefNode(<sp/>24,<sp/></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1991,<sp/><sp/>7,<sp/><sp/>4,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2011,<sp/><sp/>9,<sp/>30,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>25,<sp/>XRefNode(<sp/>25,<sp/></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1992,<sp/><sp/>2,<sp/>23,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>26,<sp/>XRefNode(<sp/>26,<sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1992,<sp/><sp/>7,<sp/><sp/>7,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>NANU<sp/>#<sp/>(start).<sp/>NANU<sp/>2012061<sp/>(end)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>NANU<sp/>#(start).<sp/>NANU<sp/>2011059<sp/>(end).<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>27,<sp/>XRefNode(<sp/>27,<sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1992,<sp/><sp/>9,<sp/><sp/>9,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2011,<sp/><sp/>8,<sp/>10,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NANU<sp/>2011105<sp/>(start).<sp/>NANU<sp/>2012063<sp/>(end)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>27,<sp/>XRefNode(<sp/>27,<sp/></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2011,<sp/>12,<sp/>16,<sp/>22,<sp/>38,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2012,<sp/>10,<sp/><sp/>6,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>28,<sp/>XRefNode(<sp/>28,<sp/></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1992,<sp/><sp/>4,<sp/>10,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1997,<sp/><sp/>8,<sp/>15,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>29,<sp/>XRefNode(<sp/>29,<sp/></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1992,<sp/>12,<sp/>18,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2007,<sp/>10,<sp/>23,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>30,<sp/>XRefNode(<sp/>30,<sp/></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1996,<sp/><sp/>9,<sp/>12,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2011,<sp/><sp/>8,<sp/><sp/>4,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>31,<sp/>XRefNode(<sp/>31,<sp/></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1993,<sp/><sp/>3,<sp/>30,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2005,<sp/>10,<sp/>24,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>32,<sp/>XRefNode(<sp/><sp/>1,<sp/></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1992,<sp/>11,<sp/>22,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2008,<sp/><sp/>3,<sp/>17,<sp/>22,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>NANU<sp/>2012018<sp/>(start).<sp/>NANU<sp/>2012024<sp/>(end)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>32,<sp/>XRefNode(<sp/><sp/>24,<sp/></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2012,<sp/><sp/>3,<sp/>14,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2012,<sp/><sp/>4,<sp/>24,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>33,<sp/>XRefNode(<sp/><sp/>3,<sp/></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1996,<sp/><sp/>3,<sp/>28,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>34,<sp/>XRefNode(<sp/><sp/>4,<sp/></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1993,<sp/>10,<sp/>26,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>35,<sp/>XRefNode(<sp/><sp/>5,<sp/></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1993,<sp/><sp/>8,<sp/>30,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2009,<sp/><sp/>3,<sp/>26,<sp/>20,<sp/>31,<sp/><sp/>0.0,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>35,<sp/>XRefNode(<sp/><sp/>1,<sp/></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2009,<sp/><sp/>7,<sp/>12,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2011,<sp/><sp/>6,<sp/><sp/>1,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>35,<sp/>XRefNode(<sp/><sp/>30,<sp/></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2011,<sp/><sp/>8,<sp/><sp/>6,<sp/>20,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>36,<sp/>XRefNode(<sp/><sp/>6,<sp/></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1995,<sp/><sp/>3,<sp/>10,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>37,<sp/>XRefNode(<sp/><sp/>7,<sp/></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1993,<sp/><sp/>5,<sp/>13,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2007,<sp/><sp/>7,<sp/>20,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>37,<sp/>XRefNode(<sp/><sp/>1,<sp/></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2008,<sp/>10,<sp/>23,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2009,<sp/><sp/>1,<sp/><sp/>6,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>NANU<sp/>2012024<sp/>(start).<sp/>NANU<sp/>201249<sp/>(end)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>37,<sp/>XRefNode(<sp/><sp/>24,<sp/></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2012,<sp/><sp/>4,<sp/>25,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2012,<sp/><sp/>8,<sp/><sp/>7,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>38,<sp/>XRefNode(<sp/><sp/>8,<sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1997,<sp/>11,<sp/><sp/>6,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>39,<sp/>XRefNode(<sp/><sp/>9,<sp/></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1993,<sp/><sp/>6,<sp/>26,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>40,<sp/>XRefNode(<sp/>10,<sp/></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1996,<sp/><sp/>7,<sp/>16,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>41,<sp/>XRefNode(<sp/>14,<sp/></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2000,<sp/>11,<sp/>10,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>NAVSTAR<sp/>42,<sp/>IIR-1<sp/>was<sp/>a<sp/>launch<sp/>failure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>43,<sp/>XRefNode(<sp/>13,<sp/></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1997,<sp/><sp/>7,<sp/>23,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>44,<sp/>XRefNode(<sp/>28,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2000,<sp/><sp/>7,<sp/>16,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>45,<sp/>XRefNode(<sp/>21,<sp/></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2003,<sp/><sp/>3,<sp/>31,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>46,<sp/>XRefNode(<sp/>11,<sp/></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1999,<sp/>10,<sp/><sp/>7,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>47,<sp/>XRefNode(<sp/>22,<sp/></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2003,<sp/>12,<sp/>21,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>48,<sp/>XRefNode(<sp/><sp/>7,<sp/></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2008,<sp/><sp/>3,<sp/>15,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>NANU<sp/>2012003<sp/>(start).<sp/>NANU<sp/>2012018<sp/>(end)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>49,<sp/>XRefNode(<sp/><sp/>24,<sp/></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2012,<sp/><sp/>2,<sp/><sp/>1,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2012,<sp/><sp/>3,<sp/>13,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>NANU<sp/>2012049<sp/>(start).<sp/>NANU<sp/>#<sp/>(end)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>49,<sp/>XRefNode(<sp/>24,<sp/></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2012,<sp/><sp/>8,<sp/><sp/>8,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2012,<sp/><sp/>8,<sp/>22,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>NANU<sp/>2012064<sp/>(start).<sp/>NANU<sp/>2013029<sp/>(end<sp/>-<sp/>IMPLIED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>49,<sp/>XRefNode(<sp/>27,<sp/></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2012,<sp/>10,<sp/>18,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2013,<sp/><sp/>5,<sp/><sp/>7,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>NANU<sp/>2013029<sp/>(start)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>49,<sp/>XRefNode(<sp/>30,<sp/></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2013,<sp/><sp/>5,<sp/><sp/>8,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>49,<sp/>XRefNode(<sp/><sp/>1,<sp/></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2009,<sp/><sp/>3,<sp/>24,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2011,<sp/><sp/>5,<sp/><sp/>6,<sp/>16,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>50,<sp/>XRefNode(<sp/><sp/>5,<sp/></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2009,<sp/><sp/>8,<sp/>27,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>51,<sp/>XRefNode(<sp/>20,<sp/></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2000,<sp/><sp/>5,<sp/>11,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>52,<sp/>XRefNode(<sp/>31,<sp/></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2006,<sp/><sp/>9,<sp/>25,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>53,<sp/>XRefNode(<sp/>17,<sp/></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2005,<sp/><sp/>9,<sp/>26,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>54,<sp/>XRefNode(<sp/>18,<sp/></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2001,<sp/><sp/>1,<sp/>30,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>55,<sp/>XRefNode(<sp/>15,<sp/></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2007,<sp/>10,<sp/>17,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>56,<sp/>XRefNode(<sp/>16,<sp/></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2003,<sp/><sp/>1,<sp/>29,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>57,<sp/>XRefNode(<sp/>29,<sp/></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2007,<sp/>12,<sp/>21,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>58,<sp/>XRefNode(<sp/>12,<sp/></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2006,<sp/>11,<sp/>17,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>59,<sp/>XRefNode(<sp/>19,<sp/></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2004,<sp/><sp/>3,<sp/>20,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>60,<sp/>XRefNode(<sp/>23,<sp/></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2004,<sp/><sp/>6,<sp/>23,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>61,<sp/>XRefNode(<sp/><sp/>2,<sp/></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2004,<sp/><sp/>6,<sp/><sp/>6,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>62,<sp/>XRefNode(<sp/>25,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2010,<sp/><sp/>5,<sp/>28,<sp/><sp/>3,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>63,<sp/>XRefNode(<sp/>1,</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2011,<sp/><sp/>7,<sp/>20,<sp/><sp/>9,<sp/>36,<sp/>36.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>65,<sp/>XRefNode(<sp/>24,</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2012,<sp/>10,<sp/><sp/>4,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));<sp/></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/>NtoPMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>66,<sp/>XRefNode(<sp/>27,</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2013,<sp/><sp/>5,<sp/>15,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));<sp/></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>PRN<sp/>ID<sp/>-&gt;<sp/>NAVSTAR<sp/>relationship</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>Because<sp/>of<sp/>a<sp/>bug<sp/>in<sp/>the<sp/>Solaris<sp/>compler<sp/>version<sp/>5.x,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>you<sp/>cannot<sp/>use<sp/>make_pair<sp/>b/c<sp/>Solaris<sp/>ASSUMES<sp/>the<sp/>key<sp/>is<sp/>const<sp/>AND</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sun&apos;s<sp/>implementation<sp/>of<sp/>pair<sp/>lacks<sp/>the<sp/>templated<sp/>copy<sp/>constructor<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>template&lt;<sp/>class<sp/>a,<sp/>class<sp/>b&gt;<sp/>pair::pair&lt;<sp/>const<sp/>pair&lt;a,b&gt;&amp;<sp/>p<sp/>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/><sp/>1,<sp/>XRefNode(<sp/>32,<sp/></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1992,<sp/>11,<sp/>22,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2008,<sp/><sp/>3,<sp/>17,<sp/>22,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/><sp/>1,<sp/>XRefNode(<sp/>37,<sp/></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2008,<sp/>10,<sp/>23,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2009,<sp/><sp/>1,<sp/><sp/>7,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/><sp/>1,<sp/>XRefNode(<sp/>49,<sp/></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2009,<sp/><sp/>3,<sp/>24,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2011,<sp/><sp/>5,<sp/><sp/>6,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/><sp/>1,<sp/>XRefNode(<sp/>35,<sp/></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2011,<sp/><sp/>6,<sp/><sp/>1,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2011,<sp/><sp/>7,<sp/>12,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/><sp/>1,<sp/>XRefNode(<sp/>63,<sp/></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2011,<sp/>7,<sp/>20,<sp/><sp/>9,<sp/>36,<sp/>36.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/><sp/>2,<sp/>XRefNode(<sp/>13,<sp/></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1989,<sp/><sp/>6,<sp/>10,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2004,<sp/><sp/>5,<sp/>12,<sp/>17,<sp/><sp/>1,<sp/><sp/>0.0,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/><sp/>2,<sp/>XRefNode(<sp/>61,<sp/></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2004,<sp/><sp/>6,<sp/><sp/>6,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/><sp/>3,<sp/>XRefNode(<sp/>11,<sp/></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1985,<sp/>10,<sp/>30,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1994,<sp/><sp/>4,<sp/>14,<sp/>21,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/><sp/>3,<sp/>XRefNode(<sp/>33,<sp/></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1996,<sp/><sp/>3,<sp/>28,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/><sp/>4,<sp/>XRefNode(<sp/><sp/>1,<sp/></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1978,<sp/><sp/>2,<sp/>22,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1985,<sp/><sp/>7,<sp/>17,<sp/>17,<sp/>30,<sp/><sp/>0.0,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/><sp/>4,<sp/>XRefNode(<sp/>34,<sp/></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1993,<sp/>10,<sp/>26,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/><sp/>5,<sp/>XRefNode(<sp/><sp/>5,<sp/></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1980,<sp/><sp/>2,<sp/><sp/>9,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1984,<sp/><sp/>5,<sp/>11,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/><sp/>5,<sp/>XRefNode(<sp/>35,<sp/></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1993,<sp/><sp/>8,<sp/>30,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2009,<sp/><sp/>3,<sp/>26,<sp/>20,<sp/>31,<sp/><sp/>0.0,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/><sp/>5,<sp/>XRefNode(<sp/>50,<sp/></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2009,<sp/><sp/>8,<sp/>27,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/><sp/>6,<sp/>XRefNode(<sp/><sp/>3,<sp/></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1978,<sp/>10,<sp/><sp/>6,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1992,<sp/><sp/>5,<sp/>18,<sp/>23,<sp/>41,<sp/><sp/>0.0,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/><sp/>6,<sp/>XRefNode(<sp/>36,<sp/></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1995,<sp/><sp/>3,<sp/>10,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/><sp/>7,<sp/>XRefNode(<sp/><sp/>2,<sp/></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1978,<sp/><sp/>6,<sp/>13,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1988,<sp/><sp/>2,<sp/>12,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/><sp/>7,<sp/>XRefNode(<sp/>37,<sp/></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1993,<sp/><sp/>5,<sp/>13,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2007,<sp/><sp/>7,<sp/>20,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/><sp/>7,<sp/>XRefNode(<sp/>48,<sp/></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2008,<sp/><sp/>3,<sp/>15,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/><sp/>8,<sp/>XRefNode(<sp/><sp/>4,<sp/></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1978,<sp/>12,<sp/>10,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1990,<sp/><sp/>5,<sp/>31,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/><sp/>8,<sp/>XRefNode(<sp/>38,<sp/></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1997,<sp/>11,<sp/><sp/>6,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/><sp/>9,<sp/>XRefNode(<sp/><sp/>6,<sp/></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1980,<sp/><sp/>4,<sp/>26,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1991,<sp/><sp/>3,<sp/><sp/>6,<sp/><sp/>3,<sp/>42,<sp/><sp/>0.0,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/><sp/>9,<sp/>XRefNode(<sp/>39,<sp/></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1993,<sp/><sp/>6,<sp/>26,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>10,<sp/>XRefNode(<sp/>40,<sp/></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1996,<sp/><sp/>7,<sp/>16,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>11,<sp/>XRefNode(<sp/><sp/>8,<sp/></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1983,<sp/><sp/>7,<sp/>14,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1993,<sp/><sp/>5,<sp/><sp/>4,<sp/><sp/>0,<sp/>20,<sp/><sp/>0.0,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>11,<sp/>XRefNode(<sp/>46,<sp/></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1999,<sp/>10,<sp/><sp/>7,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>12,<sp/>XRefNode(<sp/>10,<sp/></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1984,<sp/><sp/>9,<sp/><sp/>8,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1996,<sp/><sp/>3,<sp/>26,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>12,<sp/>XRefNode(<sp/>58,<sp/></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2006,<sp/>11,<sp/>17,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>13,<sp/>XRefNode(<sp/><sp/>9,<sp/></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1984,<sp/><sp/>6,<sp/>13,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1993,<sp/><sp/>5,<sp/><sp/>4,<sp/>18,<sp/>17,<sp/><sp/>0.0,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>13,<sp/>XRefNode(<sp/>43,<sp/></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1997,<sp/><sp/>7,<sp/>23,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>14,<sp/>XRefNode(<sp/>14,<sp/></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1989,<sp/><sp/>2,<sp/>14,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2000,<sp/><sp/>4,<sp/>14,<sp/>13,<sp/>47,<sp/><sp/>0.0,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>14,<sp/>XRefNode(<sp/>41,<sp/></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2000,<sp/>11,<sp/>10,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>15,<sp/>XRefNode(<sp/>15,<sp/></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1990,<sp/>10,<sp/><sp/>1,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2007,<sp/><sp/>3,<sp/>15,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>15,<sp/>XRefNode(<sp/>55,<sp/></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2007,<sp/>10,<sp/>17,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>16,<sp/>XRefNode(<sp/>16,<sp/></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1989,<sp/><sp/>8,<sp/>18,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2000,<sp/>10,<sp/>13,<sp/><sp/>0,<sp/>45,<sp/><sp/>0.0,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>16,<sp/>XRefNode(<sp/>56,<sp/></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2003,<sp/><sp/>1,<sp/>29,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>17,<sp/>XRefNode(<sp/>17,<sp/></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1989,<sp/>12,<sp/>11,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2005,<sp/><sp/>2,<sp/>23,<sp/>22,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>17,<sp/>XRefNode(<sp/>53,<sp/></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2005,<sp/><sp/>9,<sp/>26,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>18,<sp/>XRefNode(<sp/>18,<sp/></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1990,<sp/><sp/>1,<sp/>24,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2000,<sp/><sp/>8,<sp/>18,<sp/><sp/>7,<sp/>42,<sp/><sp/>0.0,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>18,<sp/>XRefNode(<sp/>54,<sp/></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2001,<sp/><sp/>1,<sp/>30,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>19,<sp/>XRefNode(<sp/>19,<sp/></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1989,<sp/>10,<sp/>21,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2001,<sp/><sp/>9,<sp/>11,<sp/>22,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>19,<sp/>XRefNode(<sp/>59,<sp/></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2004,<sp/><sp/>3,<sp/>20,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>20,<sp/>XRefNode(<sp/>20,<sp/></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1990,<sp/><sp/>3,<sp/>26,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1996,<sp/>12,<sp/>13,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>20,<sp/>XRefNode(<sp/>51,<sp/></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2000,<sp/><sp/>5,<sp/>11,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>21,<sp/>XRefNode(<sp/>21,<sp/></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1990,<sp/><sp/>8,<sp/><sp/>2,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2003,<sp/><sp/>1,<sp/>27,<sp/>22,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>21,<sp/>XRefNode(<sp/>45,<sp/></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2003,<sp/><sp/>3,<sp/>31,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>22,<sp/>XRefNode(<sp/>22,<sp/></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1993,<sp/><sp/>2,<sp/><sp/>3,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2003,<sp/><sp/>8,<sp/><sp/>6,<sp/>22,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>22,<sp/>XRefNode(<sp/>47,<sp/></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2003,<sp/>12,<sp/>21,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>23,<sp/>XRefNode(<sp/>23,<sp/></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1990,<sp/>11,<sp/>26,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2004,<sp/><sp/>2,<sp/>13,<sp/>22,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>23,<sp/>XRefNode(<sp/>60,<sp/></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2004,<sp/><sp/>6,<sp/>23,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>24,<sp/>XRefNode(<sp/>24,<sp/></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1991,<sp/><sp/>7,<sp/><sp/>4,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2011,<sp/><sp/>9,<sp/>30,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>NANU<sp/>2012003<sp/>(start).<sp/>NANU<sp/>2012018<sp/>(end).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>24,<sp/>XRefNode(<sp/>49,<sp/></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2012,<sp/><sp/>2,<sp/><sp/>1,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2012,<sp/><sp/>3,<sp/>13,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>NANU<sp/>2012049<sp/>(start).<sp/>NANU<sp/>#(end).<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>24,<sp/>XRefNode(<sp/>49,<sp/></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2012,<sp/><sp/>8,<sp/><sp/>8,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2012,<sp/><sp/>8,<sp/>22,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>NANU<sp/>2012018<sp/>(start).<sp/>NANU<sp/>2012024<sp/>(end).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>24,<sp/>XRefNode(<sp/>32,<sp/></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2012,<sp/><sp/>3,<sp/>14,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2012,<sp/><sp/>4,<sp/>24,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>NANU<sp/>2012024<sp/>(start).<sp/>NANU<sp/>2012049<sp/>(end)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>24,<sp/>XRefNode(<sp/>37,<sp/></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2012,<sp/><sp/>4,<sp/>25,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2012,<sp/><sp/>8,<sp/><sp/>7,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>NANU<sp/>2012062<sp/>(start).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>24,<sp/>XRefNode(<sp/>65,<sp/></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2012,<sp/>10,<sp/><sp/>4,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME)));</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>25,<sp/>XRefNode(<sp/>25,</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1992,<sp/><sp/>2,<sp/>23,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2009,<sp/>12,<sp/>18,<sp/>22,<sp/>28,<sp/><sp/>0.0,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>25,<sp/>XRefNode(<sp/>62,</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2010,<sp/><sp/>5,<sp/>28,<sp/><sp/>3,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>26,<sp/>XRefNode(<sp/>26,<sp/></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1992,<sp/><sp/>7,<sp/><sp/>7,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>NANU<sp/>#(start).<sp/>NANU<sp/>2011059<sp/>(end).<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>27,<sp/>XRefNode(<sp/>27,<sp/></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1992,<sp/><sp/>9,<sp/><sp/>9,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2011,<sp/><sp/>8,<sp/>10,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NANU<sp/>2011105<sp/>(start).<sp/>NANU<sp/>2012063<sp/>(end)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>27,<sp/>XRefNode(<sp/>27,<sp/></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2011,<sp/>12,<sp/>16,<sp/>22,<sp/>38,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2012,<sp/>10,<sp/><sp/>6,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>NANU<sp/>2012064<sp/>(start).<sp/>NANU<sp/>2013029<sp/>(end<sp/>implied)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>27,<sp/>XRefNode(<sp/>49,<sp/></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2012,<sp/>10,<sp/>18,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2013,<sp/><sp/>5,<sp/><sp/>7,<sp/>23,<sp/>59,<sp/><sp/>0.0,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>27,<sp/>XRefNode(<sp/>66,<sp/></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2013,<sp/><sp/>5,<sp/>15,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>28,<sp/>XRefNode(<sp/>28,<sp/></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1992,<sp/><sp/>4,<sp/>10,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1997,<sp/><sp/>8,<sp/>15,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>28,<sp/>XRefNode(<sp/>44,</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2000,<sp/><sp/>7,<sp/>16,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>29,<sp/>XRefNode(<sp/>29,<sp/></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1992,<sp/>12,<sp/>18,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2007,<sp/>10,<sp/>23,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>29,<sp/>XRefNode(<sp/>57,<sp/></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2007,<sp/>12,<sp/>21,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>30,<sp/>XRefNode(<sp/>30,<sp/></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1996,<sp/><sp/>9,<sp/>12,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2011,<sp/><sp/>8,<sp/><sp/>4,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NANU<sp/>2013027<sp/>(end).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>30,<sp/>XRefNode(<sp/><sp/>35,<sp/></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2011,<sp/><sp/>8,<sp/><sp/>5,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2013,<sp/><sp/>5,<sp/><sp/>1<sp/>,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NANU<sp/>2013029<sp/>(start).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>30,<sp/>XRefNode(<sp/><sp/>49,<sp/></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2013,<sp/><sp/>5,<sp/><sp/>8,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>31,<sp/>XRefNode(<sp/>31,<sp/></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>1993,<sp/><sp/>3,<sp/>30,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2005,<sp/>10,<sp/>24,<sp/>23,<sp/>59,<sp/>59.9,<sp/>TimeSystem::GPS))));</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>31,<sp/>XRefNode(<sp/>52,<sp/></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2006,<sp/><sp/>9,<sp/>25,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/>PtoNMap.insert(<sp/>std::pair&lt;const<sp/>int,<sp/>XRefNode&gt;(<sp/>32,<sp/>XRefNode(<sp/>23,<sp/></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CivilTime(<sp/>2006,<sp/>12,<sp/><sp/>1,<sp/><sp/>0,<sp/><sp/>0,<sp/><sp/>0.0,<sp/>TimeSystem::GPS),</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommonTime::END_OF_TIME<sp/><sp/>)));</highlight></codeline>
<codeline lineno="579"><highlight class="normal">}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SVNumXRef::getNAVSTAR(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PRNID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gpstk::CommonTime<sp/>dt<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="582"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/>SVNumXRefPair<sp/>p<sp/>=<sp/>PtoNMap.equal_range(<sp/>PRNID<sp/>);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(SVNumXRefListCI<sp/>ci=p.first;<sp/>ci<sp/>!=<sp/>p.second;<sp/>++ci<sp/>)</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ci-&gt;second.isApplicable(<sp/>dt<sp/>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<sp/>ci-&gt;second.getNAVSTARNum()<sp/>);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>didn&apos;t<sp/>find<sp/>a<sp/>NAVSTAR<sp/>#<sp/>for<sp/>this<sp/>PRN<sp/>ID<sp/>and<sp/>date,<sp/>so<sp/>throw<sp/>an<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exception.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>textOut[80];</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/>sprintf(textOut,</highlight><highlight class="stringliteral">&quot;No<sp/>NAVSTAR<sp/>#<sp/>found<sp/>associated<sp/>with<sp/>PRN<sp/>ID<sp/>%d<sp/>at<sp/>requested<sp/>date:<sp/>%s.&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PRNID,printTime(dt,</highlight><highlight class="stringliteral">&quot;%02m/%02d/%04Y&quot;</highlight><highlight class="normal">).c_str()<sp/>);<sp/></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/>std::string<sp/>sout<sp/>=<sp/>textOut;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/>NoNAVSTARNumberFound<sp/>noFound(<sp/>sout<sp/>);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/>GPSTK_THROW(noFound);<sp/></highlight></codeline>
<codeline lineno="597"><highlight class="normal">}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SVNumXRef::NAVSTARIDAvailable(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PRNID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gpstk::CommonTime<sp/>dt<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="600"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/>SVNumXRefPair<sp/>p<sp/>=<sp/>PtoNMap.equal_range(<sp/>PRNID<sp/>);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(SVNumXRefListCI<sp/>ci=p.first;<sp/>ci<sp/>!=<sp/>p.second;<sp/>++ci<sp/>)</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ci-&gt;second.isApplicable(<sp/>dt<sp/>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);<sp/></highlight></codeline>
<codeline lineno="607"><highlight class="normal">}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SVNumXRef::NAVSTARIDActive(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NAVSTARID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gpstk::CommonTime<sp/>dt<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="610"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(SVNumXRefListCI<sp/>ci=PtoNMap.begin();<sp/>ci<sp/>!=<sp/>PtoNMap.end();<sp/>++ci<sp/>)</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ci-&gt;second.getNAVSTARNum()==NAVSTARID<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci-&gt;second.isApplicable(<sp/>dt<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);<sp/></highlight></codeline>
<codeline lineno="617"><highlight class="normal">}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal">SVNumXRef::BlockType<sp/>SVNumXRef::getBlockType(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NAVSTARID<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="620"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/>map&lt;int,BlockType&gt;::const_iterator<sp/>i;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/>i<sp/>=<sp/>NtoBMap.find(<sp/><sp/>NAVSTARID<sp/>);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i!=NtoBMap.end())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(i-&gt;second);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>didn&apos;t<sp/>find<sp/>a<sp/>BlockType<sp/>for<sp/>this<sp/>NAVSTAR<sp/>#,<sp/>so<sp/>throw<sp/>an<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exception.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>textOut[80];</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/>sprintf(textOut,</highlight><highlight class="stringliteral">&quot;No<sp/>BlockType<sp/>found<sp/>associated<sp/>with<sp/>NAVSTAR<sp/>Num<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NAVSTARID);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/>std::string<sp/>sout<sp/>=<sp/>textOut;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/>NoNAVSTARNumberFound<sp/>noFound(<sp/>sout<sp/>);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/>GPSTK_THROW(noFound);<sp/></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(<sp/>noFound<sp/>);</highlight></codeline>
<codeline lineno="634"><highlight class="normal">}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal">std::string<sp/>SVNumXRef::getBlockTypeString(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NAVSTARID<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="637"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/>std::map&lt;int,BlockType&gt;::const_iterator<sp/>i;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/>i<sp/>=<sp/>NtoBMap.find(<sp/>NAVSTARID<sp/>);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i!=NtoBMap.end())</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>getBlockType(<sp/>NAVSTARID<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>I:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;Block<sp/>I&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>II:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;Block<sp/>II&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IIA:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;Block<sp/>IIA&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IIR:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;Block<sp/>IIR&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IIR_M:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;Block<sp/>IIR_M&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>IIF:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;Block<sp/>IIF&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;unknown&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="654"><highlight class="normal">}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SVNumXRef::getPRNID(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NAVSTARID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gpstk::CommonTime<sp/>dt<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="657"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/>NAVNumXRefPair<sp/>p<sp/>=<sp/>NtoPMap.equal_range(<sp/>NAVSTARID<sp/>);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>is<sp/>only<sp/>one<sp/>PRNID<sp/>for<sp/>this<sp/>SVN<sp/>number<sp/>return<sp/>it<sp/>to<sp/>maintain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compatability<sp/>with<sp/>previous<sp/>versions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>p.first<sp/>==<sp/>(--p.second)<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>p.first-&gt;second.getPRNNum()<sp/>);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/>++p.second;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(NAVNumXRefCI<sp/>ci=p.first;<sp/>ci<sp/>!=<sp/>p.second;<sp/>++ci<sp/>)</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ci-&gt;second.isApplicable(<sp/>dt<sp/>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<sp/>ci-&gt;second.getPRNNum()<sp/>);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>didn&apos;t<sp/>find<sp/>a<sp/>PRN<sp/>ID<sp/>for<sp/>this<sp/>NAVSTAR<sp/>#<sp/>and<sp/>date,<sp/>so<sp/>throw<sp/>an<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exception.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>textOut[80];</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/>sprintf(textOut,</highlight><highlight class="stringliteral">&quot;No<sp/>PRN<sp/>ID<sp/>found<sp/>associated<sp/>with<sp/>NAVSTAR<sp/>Num<sp/>%d<sp/>at<sp/>requested<sp/>date:<sp/>%s.&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NAVSTARID,printTime(dt,</highlight><highlight class="stringliteral">&quot;%02m/%02d/%04Y&quot;</highlight><highlight class="normal">).c_str()<sp/>);<sp/></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/>std::string<sp/>sout<sp/>=<sp/>textOut;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/>NoNAVSTARNumberFound<sp/>noFound(<sp/>sout<sp/>);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/>GPSTK_THROW(noFound);<sp/></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(<sp/>noFound<sp/>);</highlight></codeline>
<codeline lineno="677"><highlight class="normal">}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SVNumXRef::PRNIDAvailable(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NAVSTARID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gpstk::CommonTime<sp/>dt<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="680"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/>NAVNumXRefPair<sp/>p<sp/>=<sp/>NtoPMap.equal_range(<sp/>NAVSTARID<sp/>);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>p.first<sp/>==<sp/>(--p.second)<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/>++p.second;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(NAVNumXRefCI<sp/>ci=p.first;<sp/>ci<sp/>!=<sp/>p.second;<sp/>++ci<sp/>)</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ci-&gt;second.isApplicable(<sp/>dt<sp/>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);<sp/></highlight></codeline>
<codeline lineno="689"><highlight class="normal">}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SVNumXRef::BlockTypeAvailable(<sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NAVSTARID<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="692"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/>map&lt;int,BlockType&gt;::const_iterator<sp/>i;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/>i<sp/>=<sp/>NtoBMap.find(<sp/><sp/>NAVSTARID<sp/>);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i!=NtoBMap.end())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="697"><highlight class="normal">}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="comment">//--------------<sp/>Methods<sp/>for<sp/>XRefNode<sp/>-----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal">XRefNode::XRefNode(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumArg,</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gpstk::CommonTime<sp/>begDT,</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gpstk::CommonTime<sp/>endDT<sp/>)</highlight></codeline>
<codeline lineno="703"><highlight class="normal">{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/>Num<sp/>=<sp/>NumArg;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/>begValid<sp/>=<sp/>begDT;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/>endValid<sp/>=<sp/>endDT;</highlight></codeline>
<codeline lineno="707"><highlight class="normal">}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>XRefNode::isApplicable(<sp/>gpstk::CommonTime<sp/>dt<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="710"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dt&gt;=begValid<sp/>&amp;&amp;<sp/>dt&lt;=endValid)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="713"><highlight class="normal">}</highlight></codeline>
<codeline lineno="714"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/asymingt/Dropbox/Documents/UCL/Research/Simulator/uas_framework/thirdparty/gpstk/lib/Misc/SVNumXRef.cpp"/>
  </compounddef>
</doxygen>
