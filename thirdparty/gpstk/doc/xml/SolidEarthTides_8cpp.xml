<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="SolidEarthTides_8cpp" kind="file">
    <compoundname>SolidEarthTides.cpp</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>ident<sp/>&quot;$Id:<sp/>SolidEarthTides.cpp<sp/>278<sp/>2009-08-20<sp/>15:07:42Z<sp/>BrianTolman<sp/>$&quot;</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>GPSTk,<sp/>the<sp/>GPS<sp/>Toolkit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>The<sp/>GPSTk<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>The<sp/>GPSTk<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>License<sp/>along<sp/>with<sp/>GPSTk;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/>02110,<sp/>USA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>2004,<sp/>The<sp/>University<sp/>of<sp/>Texas<sp/>at<sp/>Austin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>software<sp/>developed<sp/>by<sp/>Applied<sp/>Research<sp/>Laboratories<sp/>at<sp/>the<sp/>University</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>Texas<sp/>at<sp/>Austin,<sp/>under<sp/>contract<sp/>to<sp/>an<sp/>agency<sp/>or<sp/>agencies<sp/>within<sp/>the<sp/>U.S.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Department<sp/>of<sp/>Defense.<sp/>The<sp/>U.S.<sp/>Government<sp/>retains<sp/>all<sp/>rights<sp/>to<sp/>use,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>duplicate,<sp/>distribute,<sp/>disclose,<sp/>or<sp/>release<sp/>this<sp/>software.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Pursuant<sp/>to<sp/>DoD<sp/>Directive<sp/>523024<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DISTRIBUTION<sp/>STATEMENT<sp/>A:<sp/>This<sp/>software<sp/>has<sp/>been<sp/>approved<sp/>for<sp/>public<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>release,<sp/>distribution<sp/>is<sp/>unlimited.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="geometry_8hpp" kindref="compound">geometry.hpp</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>DEG_TO_RAD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;logstream.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="GeodeticFrames_8hpp" kindref="compound">GeodeticFrames.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="SolidEarthTides_8hpp" kindref="compound">SolidEarthTides.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">gpstk;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>computeArgs(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fhr,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>tau,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>pr,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>h,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>p,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>zns,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>ps)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>site<sp/>displacement<sp/>due<sp/>to<sp/>solid<sp/>Earth<sp/>tides<sp/>for<sp/>the<sp/>given<sp/>Position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(assumed<sp/>to<sp/>be<sp/>fixed<sp/>to<sp/>the<sp/>solid<sp/>Earth)<sp/>at<sp/>the<sp/>given<sp/>time.<sp/>Return<sp/>a<sp/>Triple</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>containing<sp/>the<sp/>site<sp/>displacement<sp/>in<sp/>WGS84<sp/>ECEF<sp/>XYZ<sp/>coordinates<sp/>with<sp/>units<sp/>meters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Reference<sp/>IERS<sp/>Conventions<sp/>(1996)<sp/>found<sp/>in<sp/>IERS<sp/>Technical<sp/>Note<sp/>21<sp/>(IERS).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Also<sp/>Kouba<sp/>and<sp/>Heroux<sp/>(2001)<sp/>state<sp/>that<sp/>the<sp/>permanent<sp/>deformation<sp/>terms<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>required<sp/>by<sp/>the<sp/>ITRF.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NB.<sp/>Currently<sp/>only<sp/>the<sp/>largest<sp/>terms<sp/>are<sp/>implemented,<sp/>however<sp/>this<sp/>still<sp/>yields<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/>result<sp/>accurate<sp/>to<sp/>the<sp/>millimeter<sp/>level.<sp/>Specifically,<sp/>IERS<sp/>pg<sp/>61<sp/>eq<sp/>8<sp/>and<sp/>IERS<sp/>pg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/>65<sp/>eq<sp/>17<sp/>are<sp/>implemented.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@param<sp/><sp/>Position<sp/>site<sp/><sp/><sp/><sp/>Nominal<sp/>position<sp/>of<sp/>the<sp/>site<sp/>of<sp/>interest.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@param<sp/><sp/>CommonTime<sp/>time<sp/><sp/><sp/><sp/><sp/>Time<sp/>of<sp/>interest.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@param<sp/><sp/>SolarSystem<sp/>sse<sp/><sp/>Reference<sp/>to<sp/>solar<sp/>system<sp/>ephemeris<sp/>(class<sp/>SolarSystem),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>must<sp/>be<sp/>initialized<sp/>appropriately<sp/>for<sp/>time<sp/>(by<sp/>calling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SolarSystem::initializeWithBinaryFile()<sp/>).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@param<sp/><sp/>EarthOrientation<sp/>eo<sp/>Earth<sp/>orientation<sp/>parameters<sp/>appropriate<sp/>for<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@return<sp/>Triple<sp/>disp<sp/><sp/><sp/><sp/><sp/><sp/>Displacement<sp/>vector,<sp/>WGS84<sp/>ECEF<sp/>XYZ<sp/>meters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@throw<sp/>if<sp/>solar<sp/>system<sp/>ephemeris<sp/>is<sp/>not<sp/>valid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">Triple<sp/>computeSolidEarthTides(Position<sp/>site,<sp/>CommonTime<sp/>time,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SolarSystem&amp;<sp/>sse,<sp/>EarthOrientation&amp;<sp/>eo)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(Exception)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sse.JPLNumber()<sp/>==<sp/>-1<sp/>||</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sse.startTime()-time<sp/>&gt;<sp/>1.e-8<sp/>||</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>time-sse.endTime()<sp/>&gt;<sp/>1.e-8)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Exception<sp/>e(</highlight><highlight class="stringliteral">&quot;Solar<sp/>system<sp/>ephemeris<sp/>is<sp/>not<sp/>valid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GPSTK_THROW(e);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug<sp/>=<sp/>(LOGlevel<sp/>&gt;=<sp/>DEBUG7);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>RSun,<sp/>RMoon,<sp/>REarth=6378137.0,<sp/>Rx,<sp/>Love,<sp/>Shida,<sp/>sunFactor,<sp/>moonFactor;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sunDOTrx,<sp/>moonDOTrx,<sp/>REoRS,<sp/>REoRM,<sp/>EMRAT;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lat,<sp/>lon,<sp/>sinlat,<sp/>coslat,<sp/>sinlon,<sp/>coslon;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>latSun,<sp/>lonSun,<sp/>latMoon,<sp/>lonMoon;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/>Position<sp/>Sun,<sp/>Moon;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/>Triple<sp/>disp,<sp/>sunUnit,<sp/>moonUnit,<sp/>rx,<sp/>tSun,<sp/>tMoon,<sp/>north,<sp/>east,<sp/>up,<sp/>tmp,<sp/>tmpNEU;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>positions<sp/>(WGS84<sp/>m)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/>Sun<sp/>=<sp/>sse.WGS84Position(SolarSystem::Sun,<sp/>time,<sp/>eo);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/>Moon<sp/>=<sp/>sse.WGS84Position(SolarSystem::Moon,<sp/>time,<sp/>eo);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/>LOG(DEBUG7)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Sun<sp/>position<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>printTime(time,</highlight><highlight class="stringliteral">&quot;%4F<sp/>%10.3g<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>setw(23)<sp/>&lt;&lt;<sp/>Sun.X()<sp/>&lt;&lt;<sp/>setw(23)<sp/>&lt;&lt;<sp/>Sun.Y()<sp/>&lt;&lt;<sp/>setw(23)<sp/>&lt;&lt;<sp/>Sun.Z();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/>LOG(DEBUG7)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Moon<sp/>position&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>printTime(time,</highlight><highlight class="stringliteral">&quot;%4F<sp/>%10.3g<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>setw(23)<sp/>&lt;&lt;<sp/>Moon.X()<sp/>&lt;&lt;<sp/>setw(23)<sp/>&lt;&lt;<sp/>Moon.Y()<sp/>&lt;&lt;<sp/>setw(23)<sp/>&lt;&lt;<sp/>Moon.Z();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>distances<sp/>(m)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/>RSun<sp/>=<sp/>Sun.radius();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/>RMoon<sp/>=<sp/>Moon.radius();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/>Rx<sp/>=<sp/>site.radius();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>unit<sp/>vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/>sunUnit<sp/>=<sp/>Triple(Sun.X()/RSun,<sp/>Sun.Y()/RSun,<sp/>Sun.Z()/RSun);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/>moonUnit<sp/>=<sp/>Triple(Moon.X()/RMoon,<sp/>Moon.Y()/RMoon,<sp/>Moon.Z()/RMoon);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/>rx<sp/>=<sp/>Triple(site.X()/Rx,<sp/>site.Y()/Rx,<sp/>site.Z()/Rx);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>latitude<sp/>(geocentric)<sp/>and<sp/>longitude<sp/>(East)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/>latSun<sp/>=<sp/>Sun.getGeocentricLatitude()*DEG_TO_RAD;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/>lonSun<sp/>=<sp/>Sun.getLongitude()*DEG_TO_RAD;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/>latMoon<sp/>=<sp/>Moon.getGeocentricLatitude()*DEG_TO_RAD;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/>lonMoon<sp/>=<sp/>Moon.getLongitude()*DEG_TO_RAD;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/>lat<sp/>=<sp/>site.getGeocentricLatitude()*DEG_TO_RAD;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/>lon<sp/>=<sp/>site.getLongitude()*DEG_TO_RAD;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/>sinlat<sp/>=<sp/>::sin(lat);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/>coslat<sp/>=<sp/>::cos(lat);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/>sinlon<sp/>=<sp/>::sin(lon);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/>coslon<sp/>=<sp/>::cos(lon);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//R(0,0)<sp/>=<sp/>-sa*co;<sp/><sp/>R(0,1)<sp/>=<sp/>-sa*so;<sp/><sp/>R(0,2)<sp/>=<sp/>ca;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//R(1,0)<sp/>=<sp/><sp/><sp/><sp/>-so;<sp/><sp/>R(1,1)<sp/>=<sp/><sp/><sp/><sp/><sp/>co;<sp/><sp/>R(1,2)<sp/>=<sp/>0.;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//R(2,0)<sp/>=<sp/><sp/>ca*co;<sp/><sp/>R(2,1)<sp/>=<sp/><sp/>ca*so;<sp/><sp/>R(2,2)<sp/>=<sp/>sa;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/>north<sp/>=<sp/>Triple(-sinlat*coslon,<sp/>-sinlat*sinlon,<sp/>coslat);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/>east<sp/><sp/>=<sp/>Triple(<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-sinlon,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coslon,<sp/><sp/><sp/><sp/>0.0);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/>up<sp/><sp/><sp/><sp/>=<sp/>Triple(<sp/>coslat*coslon,<sp/><sp/>coslat*sinlon,<sp/>sinlat);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GM*R<sp/>factors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/>EMRAT<sp/>=<sp/>sse.getConstant(</highlight><highlight class="stringliteral">&quot;EMRAT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/>REoRS<sp/>=<sp/>REarth/RSun;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/>sunFactor<sp/>=<sp/>REarth*REoRS*REoRS*REoRS;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>RE^4/RS^3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/>sunFactor<sp/>*=<sp/>sse.getConstant(</highlight><highlight class="stringliteral">&quot;GMS&quot;</highlight><highlight class="normal">)*((1.0+EMRAT)/EMRAT)/sse.getConstant(</highlight><highlight class="stringliteral">&quot;GMB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(GMS/GME)*RE^4/RS^3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/>REoRM<sp/>=<sp/>REarth/RMoon;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/>moonFactor<sp/>=<sp/>REarth*REoRM*REoRM*REoRM/EMRAT;<sp/></highlight><highlight class="comment">//<sp/>(GMM/GME)*RE^4/RM^3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/>LOG(DEBUG7)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Moon/Earth<sp/>mass<sp/>ratio<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>printTime(time,</highlight><highlight class="stringliteral">&quot;%4F<sp/>%10.3g<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(9)<sp/>&lt;&lt;<sp/>1.0/EMRAT;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/>LOG(DEBUG7)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Earth/Sun<sp/>radius<sp/>ratio<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>printTime(time,</highlight><highlight class="stringliteral">&quot;%4F<sp/>%10.3g<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(9)<sp/>&lt;&lt;<sp/>REoRS;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/>LOG(DEBUG7)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Sun/Earth<sp/>mass<sp/>ratio<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>printTime(time,</highlight><highlight class="stringliteral">&quot;%4F<sp/>%10.3g<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>sse.getConstant(</highlight><highlight class="stringliteral">&quot;GMS&quot;</highlight><highlight class="normal">)*((1.0+EMRAT)/EMRAT)/sse.getConstant(</highlight><highlight class="stringliteral">&quot;GMB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/>LOG(DEBUG7)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Earth/Moon<sp/>radius<sp/>ratio<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>printTime(time,</highlight><highlight class="stringliteral">&quot;%4F<sp/>%10.3g<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(9)<sp/>&lt;&lt;<sp/>REoRM;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/>LOG(DEBUG7)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Sunfactor<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>printTime(time,</highlight><highlight class="stringliteral">&quot;%4F<sp/>%10.3g<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(9)<sp/>&lt;&lt;<sp/>sunFactor;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/>LOG(DEBUG7)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Moonfactor<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>printTime(time,</highlight><highlight class="stringliteral">&quot;%4F<sp/>%10.3g<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(9)<sp/>&lt;&lt;<sp/>moonFactor;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dot<sp/>products</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/>sunDOTrx<sp/>=<sp/>sunUnit.dot(rx);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/>moonDOTrx<sp/>=<sp/>moonUnit.dot(rx);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>transverse<sp/>to<sp/>radial<sp/>direction<sp/>-<sp/>not<sp/>unit<sp/>vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/>tSun<sp/>=<sp/>sunUnit<sp/>-<sp/>sunDOTrx<sp/>*<sp/>rx;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/>tMoon<sp/>=<sp/>moonUnit<sp/>-<sp/>moonDOTrx<sp/>*<sp/>rx;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/>disp<sp/>=<sp/>Triple(0,0,0);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Steps<sp/>refer<sp/>to<sp/>IERS(1996)<sp/>table<sp/>on<sp/>page<sp/>60.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>1a<sp/>IERS(1996)<sp/>eq.<sp/>(8)<sp/>pg<sp/>61.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nominal<sp/>degree<sp/>2<sp/>Love<sp/>and<sp/>Shida<sp/>numbers<sp/>pg<sp/>60</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>poly<sp/>=<sp/>sinlat;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/>poly<sp/>=<sp/>(3.0*poly*poly-1.0)/2.0;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/>Love<sp/>=<sp/>0.6026<sp/>-<sp/>0.0006*poly;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/>Shida<sp/>=<sp/>0.0831<sp/>+<sp/>0.0002*poly;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/>tmp<sp/>=<sp/>sunFactor*(Love*(1.5*sunDOTrx*sunDOTrx-0.5)*rx<sp/>+<sp/>3.0*Shida*sunDOTrx*tSun);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;3;<sp/>i++)<sp/>disp[i]<sp/>+=<sp/>tmp[i];</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(debug)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpNEU[0]<sp/>=<sp/>north[0]*tmp[0]<sp/>+<sp/>north[1]*tmp[1]<sp/>+<sp/>north[2]*tmp[2];</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpNEU[1]<sp/>=<sp/><sp/>east[0]*tmp[0]<sp/>+<sp/><sp/>east[1]*tmp[1]<sp/>+<sp/><sp/>east[2]*tmp[2];</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpNEU[2]<sp/>=<sp/><sp/><sp/><sp/>up[0]*tmp[0]<sp/>+<sp/><sp/><sp/><sp/>up[1]*tmp[1]<sp/>+<sp/><sp/><sp/><sp/>up[2]*tmp[2];</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(DEBUG7)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>2sunTerm(NEU)<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>printTime(time,</highlight><highlight class="stringliteral">&quot;%4F<sp/>%10.3g<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(9)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>tmpNEU[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tmpNEU[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tmpNEU[2];</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/>tmp<sp/>=<sp/>moonFactor*(Love*(1.5*moonDOTrx*moonDOTrx-0.5)*rx+3.0*Shida*moonDOTrx*tMoon);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;3;<sp/>i++)<sp/>disp[i]<sp/>+=<sp/>tmp[i];</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(debug)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpNEU[0]<sp/>=<sp/>north[0]*tmp[0]<sp/>+<sp/>north[1]*tmp[1]<sp/>+<sp/>north[2]*tmp[2];</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpNEU[1]<sp/>=<sp/><sp/>east[0]*tmp[0]<sp/>+<sp/><sp/>east[1]*tmp[1]<sp/>+<sp/><sp/>east[2]*tmp[2];</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpNEU[2]<sp/>=<sp/><sp/><sp/><sp/>up[0]*tmp[0]<sp/>+<sp/><sp/><sp/><sp/>up[1]*tmp[1]<sp/>+<sp/><sp/><sp/><sp/>up[2]*tmp[2];</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(DEBUG7)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>2moonTerm(NEU)<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>printTime(time,</highlight><highlight class="stringliteral">&quot;%4F<sp/>%10.3g<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(9)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>tmpNEU[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tmpNEU[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tmpNEU[2];</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>1b<sp/>IERS(1996)<sp/>eq.<sp/>(9)<sp/>pg<sp/>61.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nominal<sp/>degree<sp/>3<sp/>Love<sp/>and<sp/>Shida<sp/>numbers<sp/>pg<sp/>60</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/>Love<sp/>=<sp/>0.292;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/>Shida<sp/>=<sp/>0.015;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/>tmp<sp/>=<sp/>sunFactor*REoRS*(Love*(2.5*sunDOTrx*sunDOTrx<sp/>-<sp/>1.5)*sunDOTrx<sp/>*<sp/>rx</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>Shida*(7.5*sunDOTrx*sunDOTrx<sp/>-<sp/>1.5)<sp/>*<sp/>tSun);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;3;<sp/>i++)<sp/>disp[i]<sp/>+=<sp/>tmp[i];</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(debug)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpNEU[0]<sp/>=<sp/>north[0]*tmp[0]<sp/>+<sp/>north[1]*tmp[1]<sp/>+<sp/>north[2]*tmp[2];</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpNEU[1]<sp/>=<sp/><sp/>east[0]*tmp[0]<sp/>+<sp/><sp/>east[1]*tmp[1]<sp/>+<sp/><sp/>east[2]*tmp[2];</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpNEU[2]<sp/>=<sp/><sp/><sp/><sp/>up[0]*tmp[0]<sp/>+<sp/><sp/><sp/><sp/>up[1]*tmp[1]<sp/>+<sp/><sp/><sp/><sp/>up[2]*tmp[2];</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(DEBUG7)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>3sunTerm(NEU)<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>printTime(time,</highlight><highlight class="stringliteral">&quot;%4F<sp/>%10.3g<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(9)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>tmpNEU[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tmpNEU[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tmpNEU[2];</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/>tmp<sp/>=<sp/>moonFactor*REoRM*(Love*(2.5*moonDOTrx*moonDOTrx<sp/>-<sp/>1.5)*moonDOTrx<sp/>*<sp/>rx</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>Shida*(7.5*moonDOTrx*moonDOTrx<sp/>-<sp/>1.5)<sp/>*<sp/>tMoon);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;3;<sp/>i++)<sp/>disp[i]<sp/>+=<sp/>tmp[i];</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(debug)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpNEU[0]<sp/>=<sp/>north[0]*tmp[0]<sp/>+<sp/>north[1]*tmp[1]<sp/>+<sp/>north[2]*tmp[2];</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpNEU[1]<sp/>=<sp/><sp/>east[0]*tmp[0]<sp/>+<sp/><sp/>east[1]*tmp[1]<sp/>+<sp/><sp/>east[2]*tmp[2];</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpNEU[2]<sp/>=<sp/><sp/><sp/><sp/>up[0]*tmp[0]<sp/>+<sp/><sp/><sp/><sp/>up[1]*tmp[1]<sp/>+<sp/><sp/><sp/><sp/>up[2]*tmp[2];</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(DEBUG7)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>3moonTerm(NEU)<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>printTime(time,</highlight><highlight class="stringliteral">&quot;%4F<sp/>%10.3g<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(9)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>tmpNEU[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tmpNEU[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tmpNEU[2];</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>of<sp/>8<sp/>and<sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(debug)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>disp;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpNEU[0]<sp/>=<sp/>north[0]*tmp[0]<sp/>+<sp/>north[1]*tmp[1]<sp/>+<sp/>north[2]*tmp[2];</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpNEU[1]<sp/>=<sp/><sp/>east[0]*tmp[0]<sp/>+<sp/><sp/>east[1]*tmp[1]<sp/>+<sp/><sp/>east[2]*tmp[2];</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpNEU[2]<sp/>=<sp/><sp/><sp/><sp/>up[0]*tmp[0]<sp/>+<sp/><sp/><sp/><sp/>up[1]*tmp[1]<sp/>+<sp/><sp/><sp/><sp/>up[2]*tmp[2];</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(DEBUG7)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>eqn8+9(NEU)<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>printTime(time,</highlight><highlight class="stringliteral">&quot;%4F<sp/>%10.3g<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(9)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>tmpNEU[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tmpNEU[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tmpNEU[2];</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>1c<sp/>IERS(1996)<sp/>eq.<sp/>(13)<sp/>pg<sp/>63.<sp/>diurnal<sp/>tides</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/>Love<sp/>=<sp/>-0.0025;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/>Shida<sp/>=<sp/>-0.0007;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/>tmp<sp/>=<sp/>-0.75*Love*::sin(2*lat)<sp/>*<sp/>(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>radial<sp/>13a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sunFactor*::sin(2*latSun)*::sin(lon-lonSun)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>moonFactor*::sin(2*latMoon)*::sin(lon-lonMoon))<sp/>*<sp/>rx</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>1.5*Shida*::cos(2*lat)<sp/>*<sp/>(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>north<sp/>13b</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sunFactor*::sin(2*latSun)*::sin(lon-lonSun)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>moonFactor*::sin(2*latMoon)*::sin(lon-lonMoon))<sp/>*<sp/>north</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>1.5*Shida*sinlat<sp/>*<sp/>(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>east<sp/>13b</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sunFactor*::sin(2*latSun)*::cos(lon-lonSun)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>moonFactor*::sin(2*latMoon)*::cos(lon-lonMoon))<sp/>*<sp/>east;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;3;<sp/>i++)<sp/>disp[i]<sp/>+=<sp/>tmp[i];</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(debug)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpNEU[0]<sp/>=<sp/>north[0]*tmp[0]<sp/>+<sp/>north[1]*tmp[1]<sp/>+<sp/>north[2]*tmp[2];</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpNEU[1]<sp/>=<sp/><sp/>east[0]*tmp[0]<sp/>+<sp/><sp/>east[1]*tmp[1]<sp/>+<sp/><sp/>east[2]*tmp[2];</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpNEU[2]<sp/>=<sp/><sp/><sp/><sp/>up[0]*tmp[0]<sp/>+<sp/><sp/><sp/><sp/>up[1]*tmp[1]<sp/>+<sp/><sp/><sp/><sp/>up[2]*tmp[2];</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(DEBUG7)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>diurnal-band(NEU)<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>printTime(time,</highlight><highlight class="stringliteral">&quot;%4F<sp/>%10.3g<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(9)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>tmpNEU[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tmpNEU[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tmpNEU[2];</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>1d<sp/>IERS(1996)<sp/>eq.<sp/>(14)<sp/>pg<sp/>63.<sp/>semidiurnal<sp/>tides</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/>Love<sp/>=<sp/>-0.0022;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/>Shida<sp/>=<sp/>-0.0007;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/>tmp<sp/>=<sp/>-0.75*Love*coslat*coslat<sp/>*<sp/>(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>radial<sp/>14a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sunFactor*::cos(latSun)*::cos(latSun)*::sin(2*(lon-lonSun))</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>moonFactor*::cos(latMoon)*::cos(latMoon)*::sin(2*(lon-lonMoon)))<sp/>*<sp/>rx</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>0.75*Shida*::sin(2*lat)<sp/>*<sp/>(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>north<sp/>14b</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sunFactor*::cos(latSun)*::cos(latSun)*::sin(2*(lon-lonSun))</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>moonFactor*::cos(latMoon)*::cos(latMoon)*::sin(2*(lon-lonMoon)))<sp/>*<sp/>north</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>1.50*Shida*coslat<sp/>*<sp/>(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>east<sp/>14b</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sunFactor*::cos(latSun)*::cos(latSun)*::cos(2*(lon-lonSun))</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>moonFactor*::cos(latMoon)*::cos(latMoon)*::cos(2*(lon-lonMoon)))<sp/>*<sp/>east;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;3;<sp/>i++)<sp/>disp[i]<sp/>+=<sp/>tmp[i];</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(debug)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpNEU[0]<sp/>=<sp/>north[0]*tmp[0]<sp/>+<sp/>north[1]*tmp[1]<sp/>+<sp/>north[2]*tmp[2];</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpNEU[1]<sp/>=<sp/><sp/>east[0]*tmp[0]<sp/>+<sp/><sp/>east[1]*tmp[1]<sp/>+<sp/><sp/>east[2]*tmp[2];</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpNEU[2]<sp/>=<sp/><sp/><sp/><sp/>up[0]*tmp[0]<sp/>+<sp/><sp/><sp/><sp/>up[1]*tmp[1]<sp/>+<sp/><sp/><sp/><sp/>up[2]*tmp[2];</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(DEBUG7)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>semi-diurnal-band(NEU)<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>printTime(time,</highlight><highlight class="stringliteral">&quot;%4F<sp/>%10.3g<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(9)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>tmpNEU[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tmpNEU[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tmpNEU[2];</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>1e<sp/>IERS(1996)<sp/>eq.<sp/>(11)<sp/>pg<sp/>62.<sp/>latitude<sp/>dependence<sp/>of<sp/>diurnal<sp/>band</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/>Shida<sp/>=<sp/>0.0012;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/>tmp<sp/>=<sp/>-<sp/>3.0*Shida*sinlat*sinlat<sp/>*<sp/>(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>north</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sunFactor*::cos(latSun)*::sin(latSun)*::cos(lon-lonSun)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>moonFactor*::cos(latMoon)*::sin(latMoon)*::cos(lon-lonMoon))<sp/>*<sp/>north</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>3.0*Shida*sinlat*::cos(2*lat)<sp/>*<sp/>(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>east</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sunFactor*::cos(latSun)*::sin(latSun)*::sin(lon-lonSun)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>moonFactor*::cos(latMoon)*::sin(latMoon)*::sin(lon-lonMoon))<sp/>*<sp/>east;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;3;<sp/>i++)<sp/>disp[i]<sp/>+=<sp/>tmp[i];</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(debug)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpNEU[0]<sp/>=<sp/>north[0]*tmp[0]<sp/>+<sp/>north[1]*tmp[1]<sp/>+<sp/>north[2]*tmp[2];</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpNEU[1]<sp/>=<sp/><sp/>east[0]*tmp[0]<sp/>+<sp/><sp/>east[1]*tmp[1]<sp/>+<sp/><sp/>east[2]*tmp[2];</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpNEU[2]<sp/>=<sp/><sp/><sp/><sp/>up[0]*tmp[0]<sp/>+<sp/><sp/><sp/><sp/>up[1]*tmp[1]<sp/>+<sp/><sp/><sp/><sp/>up[2]*tmp[2];</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(DEBUG7)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>lat-dep-diurnal-band(NEU)<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>printTime(time,</highlight><highlight class="stringliteral">&quot;%4F<sp/>%10.3g<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(9)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>tmpNEU[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tmpNEU[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tmpNEU[2];</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>1f<sp/>IERS(1996)<sp/>eq.<sp/>(12)<sp/>pg<sp/>62.<sp/>semidiurnal<sp/>band</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/>Shida<sp/>=<sp/>0.0024;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/>tmp<sp/>=<sp/>-<sp/>1.5*Shida*sinlat*coslat<sp/>*<sp/>(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>north</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sunFactor*::cos(latSun)*::cos(latSun)*::cos(2*(lon-lonSun))</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>moonFactor*::cos(latMoon)*::cos(latMoon)*::cos(2*(lon-lonMoon)))<sp/>*<sp/>north</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>1.5*Shida*sinlat*sinlat*coslat<sp/>*<sp/>(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>east</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sunFactor*::cos(latSun)*::cos(latSun)*::sin(2*(lon-lonSun))</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>moonFactor*::cos(latMoon)*::cos(latMoon)*::sin(2*(lon-lonMoon)))<sp/>*<sp/>east;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;3;<sp/>i++)<sp/>disp[i]<sp/>+=<sp/>tmp[i];</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(debug)<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpNEU[0]<sp/>=<sp/>north[0]*tmp[0]<sp/>+<sp/>north[1]*tmp[1]<sp/>+<sp/>north[2]*tmp[2];</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpNEU[1]<sp/>=<sp/><sp/>east[0]*tmp[0]<sp/>+<sp/><sp/>east[1]*tmp[1]<sp/>+<sp/><sp/>east[2]*tmp[2];</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpNEU[2]<sp/>=<sp/><sp/><sp/><sp/>up[0]*tmp[0]<sp/>+<sp/><sp/><sp/><sp/>up[1]*tmp[1]<sp/>+<sp/><sp/><sp/><sp/>up[2]*tmp[2];</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(DEBUG7)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>lat-dep-semi-diurnal-band(NEU)<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>printTime(time,</highlight><highlight class="stringliteral">&quot;%4F<sp/>%10.3g<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(9)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>tmpNEU[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tmpNEU[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tmpNEU[2];</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>2a<sp/>IERS(1996)<sp/>eq.<sp/>(15)<sp/>pg<sp/>63.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>frequency<sp/>dependence<sp/>of<sp/>Love<sp/>and<sp/>Shida<sp/>from<sp/>diurnal<sp/>band</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>step2diurnalData[9*31]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>-3.,<sp/>0.,<sp/>2.,<sp/>0.,<sp/>0.,-0.01,-0.01,<sp/><sp/>0.0,<sp/><sp/>0.0,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>-3.,<sp/>2.,<sp/>0.,<sp/>0.,<sp/>0.,-0.01,-0.01,<sp/><sp/>0.0,<sp/><sp/>0.0,</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>-2.,<sp/>0.,<sp/>1.,-1.,<sp/>0.,-0.02,-0.01,<sp/><sp/>0.0,<sp/><sp/>0.0,</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>-2.,<sp/>0.,<sp/>1.,<sp/>0.,<sp/>0.,-0.08,<sp/>0.00,<sp/>0.01,<sp/>0.01,</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>-2.,<sp/>2.,-1.,<sp/>0.,<sp/>0.,-0.02,-0.01,<sp/><sp/>0.0,<sp/><sp/>0.0,</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>-1.,<sp/>0.,<sp/>0.,-1.,<sp/>0.,-0.10,<sp/>0.00,<sp/>0.00,<sp/>0.00,</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>-1.,<sp/>0.,<sp/>0.,<sp/>0.,<sp/>0.,-0.51,<sp/>0.00,-0.02,<sp/>0.03,</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>-1.,<sp/>2.,<sp/>0.,<sp/>0.,<sp/>0.,<sp/>0.01,<sp/><sp/>0.0,<sp/><sp/>0.0,<sp/><sp/>0.0,</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0.,-2.,<sp/>1.,<sp/>0.,<sp/>0.,<sp/>0.01,<sp/><sp/>0.0,<sp/><sp/>0.0,<sp/><sp/>0.0,</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0.,<sp/>0.,-1.,<sp/>0.,<sp/>0.,<sp/>0.02,<sp/>0.01,<sp/><sp/>0.0,<sp/><sp/>0.0,</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0.,<sp/>0.,<sp/>1.,<sp/>0.,<sp/>0.,<sp/>0.06,<sp/>0.00,<sp/>0.00,<sp/>0.00,</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0.,<sp/>0.,<sp/>1.,<sp/>1.,<sp/>0.,<sp/>0.01,<sp/><sp/>0.0,<sp/><sp/>0.0,<sp/><sp/>0.0,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0.,<sp/>2.,-1.,<sp/>0.,<sp/>0.,<sp/>0.01,<sp/><sp/>0.0,<sp/><sp/>0.0,<sp/><sp/>0.0,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1.,-3.,<sp/>0.,<sp/>0.,<sp/>1.,-0.06,<sp/>0.00,<sp/>0.00,<sp/>0.00,</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1.,-2.,<sp/>0.,<sp/>1.,<sp/>0.,<sp/>0.01,<sp/><sp/>0.0,<sp/><sp/>0.0,<sp/><sp/>0.0,</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1.,-2.,<sp/>0.,<sp/>0.,<sp/>0.,-1.23,-0.07,<sp/>0.06,<sp/>0.01,</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1.,-1.,<sp/>0.,<sp/>0.,-1.,<sp/>0.02,<sp/><sp/>0.0,<sp/><sp/>0.0,<sp/><sp/>0.0,</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1.,-1.,<sp/>0.,<sp/>0.,<sp/>1.,<sp/>0.04,<sp/><sp/>0.0,<sp/><sp/>0.0,<sp/><sp/>0.0,</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1.,<sp/>0.,<sp/>0.,-1.,<sp/>0.,-0.22,<sp/>0.01,<sp/>0.01,<sp/>0.00,</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1.,<sp/>0.,<sp/>0.,<sp/>0.,<sp/>0.,12.00,-0.78,-0.67,-0.03,</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1.,<sp/>0.,<sp/>0.,<sp/>1.,<sp/>0.,<sp/>1.73,-0.12,-0.10,<sp/>0.00,</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1.,<sp/>0.,<sp/>0.,<sp/>2.,<sp/>0.,-0.04,<sp/><sp/>0.0,<sp/><sp/>0.0,<sp/><sp/>0.0,</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1.,<sp/>1.,<sp/>0.,<sp/>0.,-1.,-0.50,-0.01,<sp/>0.03,<sp/>0.00,</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1.,<sp/>1.,<sp/>0.,<sp/>0.,<sp/>1.,<sp/>0.01,<sp/><sp/>0.0,<sp/><sp/>0.0,<sp/><sp/>0.0,</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1.,<sp/>1.,<sp/>0.,<sp/>1.,-1.,-0.01,<sp/><sp/>0.0,<sp/><sp/>0.0,<sp/><sp/>0.0,</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1.,<sp/>2.,-2.,<sp/>0.,<sp/>0.,-0.01,<sp/><sp/>0.0,<sp/><sp/>0.0,<sp/><sp/>0.0,</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1.,<sp/>2.,<sp/>0.,<sp/>0.,<sp/>0.,-0.11,<sp/>0.01,<sp/>0.01,<sp/>0.00,</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>2.,-2.,<sp/>1.,<sp/>0.,<sp/>0.,-0.01,<sp/><sp/>0.0,<sp/><sp/>0.0,<sp/><sp/>0.0,</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>2.,<sp/>0.,-1.,<sp/>0.,<sp/>0.,-0.02,<sp/>0.02,<sp/><sp/>0.0,<sp/>0.01,</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>3.,<sp/>0.,<sp/>0.,<sp/>0.,<sp/>0.,<sp/>0.0,<sp/><sp/>0.01,<sp/><sp/>0.0,<sp/>0.01,</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>3.,<sp/>0.,<sp/>0.,<sp/>1.,<sp/>0.,<sp/>0.0,<sp/><sp/>0.01,<sp/><sp/>0.0,<sp/><sp/>0.0<sp/>};</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fhr,t,s,tau,pr,h,p,zns,ps;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fmjd<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">MJD</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(time).mjd+51.184/86400.0;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/>t<sp/>=<sp/>(fmjd-51545.0)/36525.0;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/>fhr<sp/>=<sp/>(fmjd-int(fmjd))*24.0;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/>computeArgs(t,<sp/>fhr,<sp/>s,<sp/>tau,<sp/>pr,<sp/>h,<sp/>p,<sp/>zns,<sp/>ps);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;3;<sp/>i++)<sp/>tmp[i]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>thetaf,dr,dn,de;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;31;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>thetaf<sp/>=<sp/>(tau<sp/>+<sp/>step2diurnalData[0+9*i]<sp/>*<sp/>s</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>step2diurnalData[1+9*i]<sp/>*<sp/>h</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>step2diurnalData[2+9*i]<sp/>*<sp/>p</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>step2diurnalData[3+9*i]<sp/>*<sp/>zns</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>step2diurnalData[4+9*i]<sp/>*<sp/>ps)<sp/>*<sp/>DEG_TO_RAD;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dr<sp/>=<sp/>(step2diurnalData[5+9*i]<sp/>*<sp/>::sin(thetaf+lon)</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+step2diurnalData[6+9*i]<sp/>*<sp/>::cos(thetaf+lon))<sp/>*<sp/>2<sp/>*<sp/>sinlat<sp/>*<sp/>coslat;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dn<sp/>=<sp/>(step2diurnalData[7+9*i]<sp/>*<sp/>::sin(thetaf+lon)</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+step2diurnalData[8+9*i]<sp/>*<sp/>::cos(thetaf+lon))</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(coslat*coslat<sp/>-<sp/>sinlat*sinlat);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>de<sp/>=<sp/>(step2diurnalData[7+9*i]<sp/>*<sp/>::cos(thetaf+lon)</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+step2diurnalData[8+9*i]<sp/>*<sp/>::sin(thetaf+lon))<sp/>*<sp/>sinlat;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp[0]<sp/>+=<sp/>dr*up[0]<sp/>+<sp/>de*east[0]<sp/>+<sp/>dn*north[0];</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp[1]<sp/>+=<sp/>dr*up[1]<sp/>+<sp/>de*east[1]<sp/>+<sp/>dn*north[1];</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp[2]<sp/>+=<sp/>dr*up[2]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>dn*north[2];</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>total<sp/>to<sp/>meters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;3;<sp/>i++)<sp/>tmp[i]<sp/>/=<sp/>1000.0;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mm<sp/>-&gt;<sp/>m</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;3;<sp/>i++)<sp/>disp[i]<sp/>+=<sp/>tmp[i];</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(debug)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpNEU[0]<sp/>=<sp/>north[0]*tmp[0]<sp/>+<sp/>north[1]*tmp[1]<sp/>+<sp/>north[2]*tmp[2];</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpNEU[1]<sp/>=<sp/><sp/>east[0]*tmp[0]<sp/>+<sp/><sp/>east[1]*tmp[1]<sp/>+<sp/><sp/>east[2]*tmp[2];</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpNEU[2]<sp/>=<sp/><sp/><sp/><sp/>up[0]*tmp[0]<sp/>+<sp/><sp/><sp/><sp/>up[1]*tmp[1]<sp/>+<sp/><sp/><sp/><sp/>up[2]*tmp[2];</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(DEBUG7)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>step2diu(NEU)<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>printTime(time,</highlight><highlight class="stringliteral">&quot;%4F<sp/>%10.3g<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(9)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>tmpNEU[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tmpNEU[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tmpNEU[2];</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//double<sp/>Tg;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Greenwhich<sp/>sidereal<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Tg<sp/>=<sp/>time.JD()-2451545.;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//if(Tg<sp/>&lt;=<sp/>0.0)<sp/>Tg<sp/>-=<sp/>1.0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Tg<sp/>/=<sp/>36525.;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Tg<sp/>=<sp/>0.279057273264<sp/>+<sp/>100.0021390378009*Tg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>(0.093104<sp/>-<sp/>6.2e-6*Tg)*Tg*Tg/86400.0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Tg<sp/>+=<sp/>time.secOfDay()/86400.0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>days</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Tg<sp/>=<sp/>fmod(Tg,1.0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//while(Tg<sp/>&lt;<sp/>0.0)<sp/>Tg<sp/>+=<sp/>1.0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Tg<sp/>*=<sp/>TWO_PI;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>radians</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//dr<sp/>=<sp/>-25.<sp/>*<sp/>sinlat<sp/>*<sp/>coslat<sp/>*<sp/>::sin(Tg<sp/>+<sp/>lon);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//for(i=0;<sp/>i&lt;3;<sp/>i++)<sp/>tmp[i]<sp/>-=<sp/>dr*up[i];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>2b<sp/>IERS(1996)<sp/>eq.<sp/>(16)<sp/>pg<sp/>64.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>frequency<sp/>dependence<sp/>of<sp/>Love<sp/>and<sp/>Shida<sp/>from<sp/>the<sp/>long<sp/>period<sp/>band</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>step2longData[9*5]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>0,<sp/>1,<sp/>0,<sp/><sp/>0.47,<sp/>0.23,<sp/>0.16,<sp/>0.07,</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>2,<sp/>0,<sp/>0,<sp/>0,<sp/>-0.20,-0.12,-0.11,-0.05,</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/>0,-1,<sp/>0,<sp/>0,<sp/>-0.11,-0.08,-0.09,-0.04,</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>-0.13,-0.11,-0.15,-0.07,</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/>0,<sp/>0,<sp/>1,<sp/>0,<sp/>-0.05,-0.05,-0.06,-0.03<sp/>};</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;3;<sp/>i++)<sp/>tmp[i]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;5;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>thetaf<sp/>=<sp/>(tau<sp/>+<sp/>step2longData[0+9*i]<sp/>*<sp/>s</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>step2longData[1+9*i]<sp/>*<sp/>h</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>step2longData[2+9*i]<sp/>*<sp/>p</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>step2longData[3+9*i]<sp/>*<sp/>zns</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>step2longData[4+9*i]<sp/>*<sp/>ps)<sp/>*<sp/>DEG_TO_RAD;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dr<sp/>=<sp/>(step2longData[5+9*i]<sp/>*<sp/>::cos(thetaf)</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+step2longData[7+9*i]<sp/>*<sp/>::sin(thetaf+lon))<sp/>*<sp/>(3*sinlat*sinlat-1);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dn<sp/>=<sp/>(step2longData[6+9*i]<sp/>*<sp/>::cos(thetaf+lon)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+step2longData[8+9*i]<sp/>*<sp/>::sin(thetaf+lon))<sp/>*<sp/>2*sinlat*coslat;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>de<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp[0]<sp/>+=<sp/>dr*up[0]<sp/>+<sp/>de*east[0]<sp/>+<sp/>dn*north[0];</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp[1]<sp/>+=<sp/>dr*up[1]<sp/>+<sp/>de*east[1]<sp/>+<sp/>dn*north[1];</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp[2]<sp/>+=<sp/>dr*up[2]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>dn*north[2];</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;3;<sp/>i++)<sp/>tmp[i]<sp/>/=<sp/>1000.0;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mm<sp/>-&gt;<sp/>m</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;3;<sp/>i++)<sp/>disp[i]<sp/>+=<sp/>tmp[i];</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/>LOG(DEBUG7)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>step2lon(NEU)<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>printTime(time,</highlight><highlight class="stringliteral">&quot;%4F<sp/>%10.3g<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(9)</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>dn/1000.0<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>de/1000.0<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dr/1000.0;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>permanent<sp/>deformation<sp/>IERS(1996)<sp/>eq.<sp/>17<sp/>pg<sp/>65.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>term<sp/>must<sp/>NOT<sp/>be<sp/>included<sp/>in<sp/>order<sp/>to<sp/>be<sp/>consistent<sp/>with<sp/>ITRF<sp/>(ref<sp/>Kouba)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//tmp<sp/>=<sp/>-0.1196*(1.5*sinlat*sinlat-0.5)*rx<sp/>-<sp/>0.0247*::sin(2*lat)*north;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//for(i=0;<sp/>i&lt;3;<sp/>i++)<sp/>disp[i]<sp/>+=<sp/>tmp[i];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(debug)<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>-0.1196*(1.5*sinlat*sinlat-0.5)*rx<sp/>-<sp/>0.0247*::sin(2*lat)*north;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpNEU[0]<sp/>=<sp/>north[0]*tmp[0]<sp/>+<sp/>north[1]*tmp[1]<sp/>+<sp/>north[2]*tmp[2];</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpNEU[1]<sp/>=<sp/><sp/>east[0]*tmp[0]<sp/>+<sp/><sp/>east[1]*tmp[1]<sp/>+<sp/><sp/>east[2]*tmp[2];</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpNEU[2]<sp/>=<sp/><sp/><sp/><sp/>up[0]*tmp[0]<sp/>+<sp/><sp/><sp/><sp/>up[1]*tmp[1]<sp/>+<sp/><sp/><sp/><sp/>up[2]*tmp[2];</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(DEBUG7)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>permanent(NEU)<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(9)</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>tmpNEU[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tmpNEU[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tmpNEU[2];</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;3;<sp/>i++)<sp/>tmp[i]<sp/>=<sp/>disp[i];</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpNEU[0]<sp/>=<sp/>north[0]*tmp[0]<sp/>+<sp/>north[1]*tmp[1]<sp/>+<sp/>north[2]*tmp[2];</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpNEU[1]<sp/>=<sp/><sp/>east[0]*tmp[0]<sp/>+<sp/><sp/>east[1]*tmp[1]<sp/>+<sp/><sp/>east[2]*tmp[2];</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpNEU[2]<sp/>=<sp/><sp/><sp/><sp/>up[0]*tmp[0]<sp/>+<sp/><sp/><sp/><sp/>up[1]*tmp[1]<sp/>+<sp/><sp/><sp/><sp/>up[2]*tmp[2];</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(DEBUG7)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>totalSET(NEU)<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>printTime(time,</highlight><highlight class="stringliteral">&quot;%4F<sp/>%10.3g<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(9)</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>tmpNEU[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tmpNEU[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tmpNEU[2];</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>disp;</highlight></codeline>
<codeline lineno="482"><highlight class="normal">}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(Exception&amp;<sp/>e)<sp/>{<sp/>GPSTK_RETHROW(e);<sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(exception&amp;<sp/>e)<sp/>{<sp/>Exception<sp/>E(</highlight><highlight class="stringliteral">&quot;std<sp/>except:<sp/>&quot;</highlight><highlight class="normal">+</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(e.what()));<sp/>GPSTK_THROW(E);<sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(...)<sp/>{<sp/>Exception<sp/>e(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>exception&quot;</highlight><highlight class="normal">);<sp/>GPSTK_THROW(e);<sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>computeArgs(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fhr,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>s,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>tau,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>pr,</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>h,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>p,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>zns,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>ps)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">()</highlight></codeline>
<codeline lineno="491"><highlight class="normal">{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t2<sp/>=<sp/>t*t;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t3<sp/>=<sp/>t2*t;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t4<sp/>=<sp/>t3*t;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/>s<sp/>=<sp/>218.31664563<sp/>+<sp/>481267.88194*t<sp/>-<sp/>0.0014663889*t2<sp/>+<sp/>0.00000185139*t3;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/>tau<sp/>=<sp/>fhr*15.<sp/>+<sp/>280.4606184<sp/>+<sp/>36000.7700536*t<sp/>+<sp/>0.00038793*t2<sp/>-<sp/>0.0000000258*t3;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/>tau<sp/>=<sp/>tau<sp/>-<sp/>s;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/>pr<sp/>=<sp/>1.396971278*t<sp/>+<sp/>0.000308889*t2<sp/>+<sp/>0.000000021*t3<sp/>+<sp/>0.000000007*t4;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/>s<sp/>=<sp/>s<sp/>+<sp/>pr;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/>h<sp/>=<sp/>280.46645<sp/>+<sp/>36000.7697489*t<sp/>+<sp/>0.00030322222*t2<sp/>+<sp/>0.000000020*t3</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>0.00000000654*t4;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/>p<sp/>=<sp/>83.35324312<sp/>+<sp/>4069.01363525*t<sp/>-<sp/>0.01032172222*t2<sp/>-<sp/>0.0000124991*t3</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>0.00000005263*t4;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/>zns<sp/>=<sp/>234.95544499<sp/><sp/>+<sp/>1934.13626197*t<sp/>-<sp/>0.00207561111*t2<sp/>-<sp/>0.00000213944*t3</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>0.00000001650*t4;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/>ps<sp/>=<sp/>282.93734098<sp/>+<sp/>1.71945766667*t<sp/>+<sp/>0.00045688889*t2<sp/>-<sp/>0.00000001778*t3</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>0.00000000334*t4;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/>s<sp/><sp/><sp/>=<sp/>fmod(s,<sp/><sp/>360.0);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/>tau<sp/>=<sp/>fmod(tau,360.0);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/>h<sp/><sp/><sp/>=<sp/>fmod(h,<sp/><sp/>360.0);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/>p<sp/><sp/><sp/>=<sp/>fmod(p,<sp/><sp/>360.0);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/>zns<sp/>=<sp/>fmod(zns,360.0);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/>ps<sp/><sp/>=<sp/>fmod(ps,<sp/>360.0);</highlight></codeline>
<codeline lineno="514"><highlight class="normal">}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="526"><highlight class="comment"></highlight><highlight class="normal">gpstk::Triple<sp/>computePolarTides(gpstk::Position<sp/>site,</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpstk::CommonTime<sp/>time,</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpstk::EarthOrientation&amp;<sp/>eo)</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(gpstk::Exception)</highlight></codeline>
<codeline lineno="530"><highlight class="normal">{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lat,<sp/>lon,<sp/>theta,<sp/>sinlat,<sp/>coslat,<sp/>sinlon,<sp/>coslon;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/>Triple<sp/>disp,<sp/>dispXYZ;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/>lat<sp/>=<sp/>site.getGeocentricLatitude();</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/>lon<sp/>=<sp/>site.getLongitude();</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/>sinlat<sp/>=<sp/>::sin(lat*DEG_TO_RAD);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/>coslat<sp/>=<sp/>::cos(lat*DEG_TO_RAD);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/>sinlon<sp/>=<sp/>::sin(lon*DEG_TO_RAD);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/>coslon<sp/>=<sp/>::cos(lon*DEG_TO_RAD);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/>theta<sp/>=<sp/>(90.0-lat)*DEG_TO_RAD;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NEU<sp/>components<sp/>-<sp/>IERS(1996)<sp/>pg<sp/>67,<sp/>eqn.<sp/>22<sp/>(in<sp/>eqn<sp/>22,<sp/>r==Up,<sp/>theta=S,<sp/>lambda=E)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/>disp[0]<sp/>=<sp/>-0.009<sp/>*<sp/>::cos(2*theta)<sp/>*<sp/>(eo.xp<sp/>*<sp/>coslon<sp/>-<sp/>eo.yp<sp/>*<sp/>sinlon);<sp/><sp/></highlight><highlight class="comment">//<sp/>-S<sp/>=<sp/>N</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/>disp[1]<sp/>=<sp/>-0.009<sp/>*<sp/>::cos(theta)<sp/>*<sp/>(eo.xp<sp/>*<sp/>sinlon<sp/>+<sp/>eo.yp<sp/>*<sp/>coslon);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>E</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/>disp[2]<sp/>=<sp/><sp/>0.032<sp/>*<sp/>::sin(2*theta)<sp/>*<sp/>(eo.xp<sp/>*<sp/>coslon<sp/>-<sp/>eo.yp<sp/>*<sp/>sinlon);<sp/><sp/></highlight><highlight class="comment">//<sp/>U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/>LOG(DEBUG7)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>poletide(NEU)<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>printTime(time,</highlight><highlight class="stringliteral">&quot;%4F<sp/>%10.3g<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(9)</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>disp[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>disp[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>disp[2];</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//R(0,0)<sp/>=<sp/>-sa*co;<sp/><sp/>R(0,1)<sp/>=<sp/>-sa*so;<sp/><sp/>R(0,2)<sp/>=<sp/>ca;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//R(1,0)<sp/>=<sp/><sp/><sp/><sp/>-so;<sp/><sp/>R(1,1)<sp/>=<sp/><sp/><sp/><sp/><sp/>co;<sp/><sp/>R(1,2)<sp/>=<sp/>0.;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//R(2,0)<sp/>=<sp/><sp/>ca*co;<sp/><sp/>R(2,1)<sp/>=<sp/><sp/>ca*so;<sp/><sp/>R(2,2)<sp/>=<sp/>sa;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/>dispXYZ[0]<sp/>=<sp/>-<sp/>sinlat*coslon*disp[0]<sp/>-<sp/>sinlat*sinlon*disp[1]<sp/>+<sp/>coslat*disp[2];</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/>dispXYZ[1]<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>sinlon*disp[0]<sp/>+<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coslon*disp[1];</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/>dispXYZ[2]<sp/>=<sp/><sp/><sp/>coslat*coslon*disp[0]<sp/>+<sp/>coslat*sinlon*disp[1]<sp/>+<sp/>sinlat*disp[2];</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dispXYZ;</highlight></codeline>
<codeline lineno="562"><highlight class="normal">}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(Exception&amp;<sp/>e)<sp/>{<sp/>GPSTK_RETHROW(e);<sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(exception&amp;<sp/>e)<sp/>{<sp/>Exception<sp/>E(</highlight><highlight class="stringliteral">&quot;std<sp/>except:<sp/>&quot;</highlight><highlight class="normal">+</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(e.what()));<sp/>GPSTK_THROW(E);<sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(...)<sp/>{<sp/>Exception<sp/>e(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>exception&quot;</highlight><highlight class="normal">);<sp/>GPSTK_THROW(e);<sp/>}</highlight></codeline>
<codeline lineno="566"><highlight class="normal">}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/asymingt/Dropbox/Documents/UCL/Research/Simulator/uas_framework/thirdparty/gpstk/lib/Geomatics/SolidEarthTides.cpp"/>
  </compounddef>
</doxygen>
