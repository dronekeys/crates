<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="MatrixTest_8cpp" kind="file">
    <compoundname>MatrixTest.cpp</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>ident<sp/>&quot;$Id$&quot;</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>GPSTk,<sp/>the<sp/>GPS<sp/>Toolkit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>The<sp/>GPSTk<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>The<sp/>GPSTk<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>License<sp/>along<sp/>with<sp/>GPSTk;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/>02110,<sp/>USA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>2009,<sp/>The<sp/>University<sp/>of<sp/>Texas<sp/>at<sp/>Austin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Vector_8hpp" kindref="compound">Vector.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Matrix_8hpp" kindref="compound">Matrix.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="PolyFit_8hpp" kindref="compound">PolyFit.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Stats_8hpp" kindref="compound">Stats.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>copyfmt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ReadMatrix(gpstk::Matrix&lt;double&gt;&amp;<sp/>M,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>file)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/>ifstream<sp/>infile(file.c_str());</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!infile)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>Type{GEN,LOW,UPT,DIA,SYM,SQU};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>labels[6]={</highlight><highlight class="stringliteral">&quot;GEN&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;LOW&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;UPT&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;DIA&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;SYM&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;SQU&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dimmed=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ch;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r=0,c=0,i=0,j=0;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>buffer;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/>Type<sp/>type=GEN;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(infile<sp/>&gt;&gt;<sp/>buffer)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(buffer[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>to<sp/>end<sp/>of<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(infile.get(ch))<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ch==</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string::size_type<sp/>in;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((in=buffer.find(</highlight><highlight class="stringliteral">&quot;r=&quot;</highlight><highlight class="normal">))<sp/>!=<sp/>string::npos)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>strtol(buffer.substr(in+2).c_str(),0,10);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;Found<sp/>r<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>r<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type<sp/>!=<sp/>GEN)<sp/>c=r;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((in=buffer.find(</highlight><highlight class="stringliteral">&quot;c=&quot;</highlight><highlight class="normal">))<sp/>!=<sp/>string::npos)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>strtol(buffer.substr(in+2).c_str(),0,10);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;Found<sp/>c<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>c<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type<sp/>!=<sp/>GEN)<sp/>r=c;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((in=buffer.find(</highlight><highlight class="stringliteral">&quot;t=&quot;</highlight><highlight class="normal">))<sp/>!=<sp/>string::npos)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((in=buffer.find(</highlight><highlight class="stringliteral">&quot;LOW&quot;</highlight><highlight class="normal">))<sp/>!=<sp/>string::npos)<sp/>type=LOW;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((in=buffer.find(</highlight><highlight class="stringliteral">&quot;UPT&quot;</highlight><highlight class="normal">))<sp/>!=<sp/>string::npos)<sp/>type=UPT;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((in=buffer.find(</highlight><highlight class="stringliteral">&quot;DIA&quot;</highlight><highlight class="normal">))<sp/>!=<sp/>string::npos)<sp/>type=DIA;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((in=buffer.find(</highlight><highlight class="stringliteral">&quot;SYM&quot;</highlight><highlight class="normal">))<sp/>!=<sp/>string::npos)<sp/>type=SYM;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((in=buffer.find(</highlight><highlight class="stringliteral">&quot;SQU&quot;</highlight><highlight class="normal">))<sp/>!=<sp/>string::npos)<sp/>type=SQU;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;Found<sp/>type<sp/>&quot;<sp/>&lt;&lt;<sp/>labels[type]<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(buffer<sp/>==<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;:::&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(r*c<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M<sp/>=<sp/>gpstk::Matrix&lt;double&gt;(r,c,double(0));</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dimmed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!dimmed)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M(i,j)<sp/>=<sp/>strtod(buffer.c_str(),0);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j++;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(type)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LOW:<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(j&gt;i)<sp/>{<sp/>i++;<sp/>j=0;<sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>UPT:<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(j&gt;=c)<sp/>{<sp/>i++;<sp/>j=i;<sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DIA:<sp/>i=j;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SYM:<sp/>M(j-1,i)<sp/>=<sp/>M(i,j-1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(j&gt;i)<sp/>{<sp/>i++;<sp/>j=0;<sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SQU:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GEN:<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(j&gt;=c)<sp/>{<sp/>i++;<sp/>j=0;<sp/>}<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/>infile.close();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!dimmed)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-2;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VectorTest(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>--------------<sp/>Vector<sp/>Test<sp/>---------------------------------\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/>gpstk::Vector&lt;double&gt;<sp/>V(10);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/>V<sp/>+=<sp/>3.1415;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;V<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>V<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dat[10]={1.1,2.2,3.3,4.4,5.5,6.6,7.7,8.8,9.9,10.1};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/>V<sp/>=<sp/>dat;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;V<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>V<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;Median<sp/>of<sp/>V<sp/>&quot;<sp/>&lt;&lt;<sp/>median(V)<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;V<sp/>min<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>min(V)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>max<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>max(V)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>sum<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sum(V)<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>slice<sp/>is<sp/>(init,number,stride)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/>gpstk::VectorSlice&lt;double&gt;<sp/>Vodd(V,std::slice(0,5,2));</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/>gpstk::ConstVectorSlice&lt;double&gt;<sp/>Veve(V,std::slice(1,5,2));</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Vodd<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>Vodd<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Veve<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>Veve<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/>Vodd[1]<sp/>=<sp/>Vodd[3]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Veve[1]<sp/>=<sp/>Veve[4]<sp/>=<sp/>99;<sp/>compiler<sp/>won&apos;t<sp/>let<sp/>you<sp/>have<sp/>Veve<sp/>as<sp/>l-value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/>V[3]<sp/>=<sp/>V[7]<sp/>=<sp/>99;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>you<sp/>can<sp/>change<sp/>V,<sp/>and<sp/>that<sp/>will<sp/>show<sp/>in<sp/>Veve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Vodd<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>Vodd<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Veve<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>Veve<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Minkowski<sp/>of<sp/>Vodd<sp/>and<sp/>Veve<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>Minkowski(Vodd,Veve)<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;dot<sp/>of<sp/>Vodd<sp/>and<sp/>Veve<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dot(Vodd,Veve)<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;V<sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>V<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;V<sp/>min<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>min(V)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>max<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>max(V)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>sum<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sum(V)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>norm<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>norm(V)<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/>gpstk::Vector&lt;double&gt;<sp/>W=V;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/>V.zeroTolerance<sp/>=<sp/>1.e-15;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Zero<sp/>tolerance<sp/>for<sp/>V<sp/>is<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>V.zeroTolerance<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/>V.zeroTolerance<sp/>=<sp/>1.e-5;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Zero<sp/>tolerance<sp/>for<sp/>W<sp/>is<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>W.zeroTolerance<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/>W<sp/>+=<sp/>V;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Here<sp/>is<sp/>W<sp/>the<sp/>usual<sp/>way<sp/>:\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setfill(</highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>setw(8)<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>W<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Here<sp/>is<sp/>W<sp/>the<sp/>saved<sp/>way<sp/>:\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setfill(</highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>setw(8)<sp/>&lt;&lt;<sp/>setprecision(3);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/>ofstream<sp/>savefmt;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/>savefmt.copyfmt(cout);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;W.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout.copyfmt(savefmt);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>W[i];</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>setfill(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/>gpstk::Vector&lt;double&gt;<sp/>Sum;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/>Sum<sp/>=<sp/>V<sp/>+<sp/>W;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Sum<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>setw(8)<sp/>&lt;&lt;<sp/>Sum<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/>gpstk::ConstVectorSlice&lt;double&gt;<sp/>CVS(V,std::slice(0,V.size(),1));</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;CVS<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>setw(13)<sp/>&lt;&lt;<sp/>CVS<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MatrixTest1(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>--------------<sp/>Matrix<sp/>Test<sp/>1<sp/>---------------------------------\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/>gpstk::Matrix&lt;double&gt;<sp/>MD(2,5);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dat[10]={1.1,2.2,3.3,4.4,5.5,6.6,7.7,8.8,9.9,10.1};</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/>MD<sp/>=<sp/>dat;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Matrix<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>MD.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>MD.cols()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>from<sp/>double*<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(1)<sp/>&lt;&lt;<sp/>setw(5)<sp/>&lt;&lt;<sp/>MD<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>filename(argv[5]);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/>gpstk::Matrix&lt;double&gt;<sp/>MF;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iret=ReadMatrix(MF,filename);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iret<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>could<sp/>not<sp/>open<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>filename<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;Matrix<sp/>(&quot;<sp/>&lt;&lt;<sp/>MF.rows()<sp/>&lt;&lt;<sp/>&quot;,&quot;<sp/>&lt;&lt;<sp/>MF.cols()<sp/>&lt;&lt;<sp/>&quot;)<sp/>from<sp/>file<sp/>:\n&quot;<sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(1)<sp/>&lt;&lt;<sp/>setw(7)<sp/>&lt;&lt;<sp/>MF<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pick<sp/>off<sp/>last<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/>gpstk::Vector&lt;double&gt;<sp/>B(MF.colCopy(MF.cols()-1));</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>all<sp/>but<sp/>last<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/>gpstk::Matrix&lt;double&gt;<sp/>A(MF,0,0,MF.rows(),MF.cols()-1);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Partials<sp/>Matrix<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>A.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>A.cols()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(10)<sp/>&lt;&lt;<sp/>A<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Data<sp/>vector<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>B.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(10)<sp/>&lt;&lt;<sp/>B<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>take<sp/>ATA,<sp/>then<sp/>invert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/>gpstk::Matrix&lt;double&gt;<sp/>AT,ATA;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/>AT<sp/>=<sp/>transpose(A);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;Transposed<sp/>matrix<sp/>(&quot;<sp/>&lt;&lt;<sp/>AT.rows()<sp/>&lt;&lt;<sp/>&quot;,&quot;<sp/>&lt;&lt;<sp/>AT.cols()<sp/>&lt;&lt;<sp/>&quot;)<sp/>:\n&quot;<sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(1)<sp/>&lt;&lt;<sp/>setw(7)<sp/>&lt;&lt;<sp/>AT<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/>ATA<sp/>=<sp/>AT<sp/>*<sp/>A;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;ATA<sp/>matrix<sp/>(&quot;<sp/>&lt;&lt;<sp/>ATA.rows()<sp/>&lt;&lt;<sp/>&quot;,&quot;<sp/>&lt;&lt;<sp/>ATA.cols()<sp/>&lt;&lt;<sp/>&quot;)<sp/>:\n&quot;<sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(13)<sp/>&lt;&lt;<sp/>ATA<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/>gpstk::Matrix&lt;double&gt;<sp/>Ainv;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{<sp/>Ainv=inverse(ATA);<sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(gpstk::Exception&amp;<sp/>e)<sp/>{<sp/>cout<sp/>&lt;&lt;<sp/>e<sp/>&lt;&lt;<sp/>endl;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Covariance<sp/>matrix<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>Ainv.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>Ainv.cols()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(10)<sp/>&lt;&lt;<sp/>Ainv<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/>gpstk::Vector&lt;double&gt;<sp/>Sol;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/>Sol<sp/>=<sp/>Ainv<sp/>*<sp/>AT<sp/>*<sp/>B;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Solution<sp/>vector<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>Sol.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(10)<sp/>&lt;&lt;<sp/>Sol<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/>gpstk::Vector&lt;double&gt;<sp/>Two;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/>Two<sp/>=<sp/>B<sp/>-<sp/>A*Sol;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Residual<sp/>vector<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>Two.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>scientific<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(10)<sp/>&lt;&lt;<sp/>Two<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/>Two<sp/>=<sp/>Sol<sp/>+<sp/>Sol;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;2*Solution<sp/>vector<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>Two.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(10)<sp/>&lt;&lt;<sp/>Two<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/>gpstk::Matrix&lt;double&gt;<sp/>TA;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/>TA<sp/>=<sp/>A<sp/>+<sp/>A;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;2*Partials<sp/>Matrix<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>TA.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>TA.cols()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(10)<sp/>&lt;&lt;<sp/>TA<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/>gpstk::Vector&lt;double&gt;<sp/>c(8),b(7);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/>gpstk::Matrix&lt;double&gt;<sp/>W;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;8;<sp/>i++)<sp/>c(i)=3*i;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;7;<sp/>i++)<sp/>b(i)=i+1;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/>W<sp/>=<sp/>outer(c,b);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Vector<sp/>c(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>c.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(7)<sp/>&lt;&lt;<sp/>c<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Vector<sp/>b(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>b.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(7)<sp/>&lt;&lt;<sp/>b<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Their<sp/>outer<sp/>product<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>W.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>W.cols()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(7)<sp/>&lt;&lt;<sp/>W<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Their<sp/>norms<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>norm(b)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>and<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>norm(c)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>and<sp/>dot<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dot(c,b)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>and<sp/>cosine<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>cosVec(c,b)<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MatrixTest2(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>--------------<sp/>Matrix<sp/>Test<sp/>2<sp/>---------------------------------\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n=2;<sp/>n&lt;13;<sp/>n++)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>big,small,cond;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gpstk::Matrix&lt;double&gt;<sp/>MM(n,n),Minv,Prod;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;n;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MM(i,j)<sp/>=<sp/>1.0/(i+j+1.0);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Tough<sp/>matrix<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>MM.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>MM.cols()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(6)<sp/>&lt;&lt;<sp/>setw(9)<sp/>&lt;&lt;<sp/>MM<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Minv<sp/>=<sp/>inverse(MM);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{<sp/>Minv=inverse(MM);<sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(gpstk::Exception&amp;<sp/>e)<sp/>{<sp/>cout<sp/>&lt;&lt;<sp/>e<sp/>&lt;&lt;<sp/>endl;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cond<sp/>=<sp/>condNum(MM,big,small);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Condition<sp/>number<sp/>for<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>n<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>big<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>scientific<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>small;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(small<sp/>&gt;<sp/>0.0)<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>big/small;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Inverse<sp/>matrix<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>Minv.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>Minv.cols()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(10+(n&gt;5?n:0))<sp/>&lt;&lt;<sp/>Minv<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Prod<sp/>=<sp/>Minv<sp/>*<sp/>MM;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gpstk::Vector&lt;double&gt;V;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>V.zeroTolerance<sp/>=<sp/>1.e-3;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Prod.zeroize();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Unity<sp/>matrix<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>Prod.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>Prod.cols()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>?<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(9)<sp/>&lt;&lt;<sp/>setw(12)<sp/>&lt;&lt;<sp/>Prod<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MatrixTest3(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)</highlight></codeline>
<codeline lineno="248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>--------------<sp/>Matrix<sp/>Test<sp/>3<sp/>---------------------------------\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Read<sp/>and<sp/>print<sp/>matrix<sp/>from<sp/>file\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cond,big,small;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/>gpstk::Matrix&lt;double&gt;<sp/>A,Ainv,P;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;argc;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>filename=argv[i];</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>filename;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iret=ReadMatrix(A,filename);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>iret<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>Matrix(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>A.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>A.cols()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(10)<sp/>&lt;&lt;<sp/>A<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(A.rows()<sp/>!=<sp/>A.cols())<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpstk::Matrix&lt;double&gt;<sp/>AT;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AT<sp/>=<sp/>gpstk::transpose(A);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>=<sp/>AT*A;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ATA<sp/>Matrix(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>A.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>A.cols()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(10)<sp/>&lt;&lt;<sp/>A<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cond<sp/>=<sp/>condNum(A,big,small);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Condition<sp/>number<sp/>is<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>big<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>scientific<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>small;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>big/small<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{<sp/>Ainv=gpstk::inverse(A);<sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(gpstk::Exception&amp;<sp/>e)<sp/>{<sp/>cout<sp/>&lt;&lt;<sp/>e<sp/>&lt;&lt;<sp/>endl;<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Inverse<sp/>matrix<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>Ainv.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>Ainv.cols()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(10)<sp/>&lt;&lt;<sp/>Ainv<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>P<sp/>=<sp/>Ainv<sp/>*<sp/>A;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Unity<sp/>matrix<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>P.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>P.cols()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>?<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(9)<sp/>&lt;&lt;<sp/>setw(12)<sp/>&lt;&lt;<sp/>P<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MatrixTest4(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>--------------<sp/>Matrix<sp/>Test<sp/>4<sp/>---------------------------------\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N=7;<sp/></highlight><highlight class="comment">//<sp/>rows<sp/>=<sp/>columns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mat[N*N]={<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>storage<sp/>by<sp/>columns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>8.317,<sp/><sp/>6.212,<sp/><sp/>2.574,<sp/><sp/>5.317,<sp/><sp/>2.080,<sp/>-9.133,<sp/>-2.755,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0.212,<sp/><sp/>3.292,<sp/><sp/>1.574,<sp/><sp/>1.028,<sp/><sp/>3.370,<sp/>-2.077,<sp/>-2.739,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>5.740,<sp/><sp/>1.574,<sp/><sp/>1.911,<sp/><sp/>1.390,<sp/><sp/>8.544,<sp/><sp/>8.930,<sp/><sp/>9.216,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>4.317,<sp/><sp/>1.028,<sp/><sp/>1.039,<sp/><sp/>7.126,<sp/><sp/>4.512,<sp/><sp/>8.538,<sp/><sp/>5.226,</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-1.109,<sp/><sp/>7.438,<sp/><sp/>7.236,<sp/><sp/>6.783,<sp/><sp/>0.356,<sp/>-9.509,<sp/>-0.109,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0.174,<sp/><sp/>5.408,<sp/>-9.503,<sp/>-6.527,<sp/>-6.589,<sp/>-6.375,<sp/>-7.239,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1.960,<sp/><sp/>6.592,<sp/><sp/>9.440,<sp/><sp/>4.428,<sp/>-4.531,<sp/><sp/>5.084,<sp/><sp/>4.296</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dat[N]={<sp/>14.289,<sp/><sp/>9.284,<sp/>-1.128,<sp/><sp/>8.389,<sp/>-6.929,<sp/><sp/>4.664,<sp/><sp/>7.590<sp/>};</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/>gpstk::Matrix&lt;double&gt;<sp/>A(N,N);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/>gpstk::Vector&lt;double&gt;<sp/>b(N);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/>A<sp/>=<sp/>mat;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/>A<sp/>=<sp/>transpose(A);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/>b<sp/>=<sp/>dat;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Matrix<sp/>A(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>A.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>A.cols()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(7)<sp/>&lt;&lt;<sp/>A<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Vector<sp/>b(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>b.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(7)<sp/>&lt;&lt;<sp/>b<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nNow<sp/>solve<sp/>using<sp/>SVD\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/>gpstk::SVD&lt;double&gt;<sp/>Asvd;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/>gpstk::Matrix&lt;double&gt;<sp/>U,V;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/>gpstk::Vector&lt;double&gt;<sp/>S;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/>Asvd(A);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/>U<sp/>=<sp/>Asvd.U;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/>V<sp/>=<sp/>Asvd.V;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/>S<sp/>=<sp/>Asvd.S;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Singular<sp/>Values<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>S.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(7)<sp/>&lt;&lt;<sp/>S<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Matrix<sp/>U(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>U.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>U.cols()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(7)<sp/>&lt;&lt;<sp/>U<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Matrix<sp/>V(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>V.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>V.cols()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(7)<sp/>&lt;&lt;<sp/>V<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/>gpstk::Matrix&lt;double&gt;<sp/>P,W(A);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/>W<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;S.size();<sp/>i++)<sp/>W(i,i)=S(i);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/>P<sp/>=<sp/>U<sp/>*<sp/>W<sp/>*<sp/>transpose(V);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/>P<sp/>=<sp/>P<sp/>-<sp/>A;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/>P.zeroize();</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Difference<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>P.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>P.cols()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>scientific<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(10)<sp/>&lt;&lt;<sp/>P<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Determinant<sp/>of<sp/>A<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>scientific<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>Asvd.det();</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d=1;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;N;<sp/>i++)<sp/>d<sp/>*=<sp/>S(i);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>--<sp/>Compare<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>scientific<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>d<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/>gpstk::Vector&lt;double&gt;<sp/>X(b);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/>Asvd.backSub(X);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Solution<sp/>via<sp/>backsubstitution<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>X.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(7)<sp/>&lt;&lt;<sp/>X<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/>S<sp/>=<sp/>b-A*X;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Solution<sp/>residuals<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>S.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>scientific<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(7)<sp/>&lt;&lt;<sp/>S<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nSort<sp/>in<sp/>ascending<sp/>order\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/>Asvd.sort(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/>U<sp/>=<sp/>Asvd.U;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/>V<sp/>=<sp/>Asvd.V;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/>S<sp/>=<sp/>Asvd.S;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Singular<sp/>Values<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>S.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(7)<sp/>&lt;&lt;<sp/>S<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Matrix<sp/>U(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>U.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>U.cols()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(7)<sp/>&lt;&lt;<sp/>U<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Matrix<sp/>V(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>V.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>V.cols()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(7)<sp/>&lt;&lt;<sp/>V<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>chop<sp/>off<sp/>the<sp/>last<sp/>column<sp/>of<sp/>A<sp/>and<sp/>repeat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n\nNow<sp/>reduce<sp/>A<sp/>by<sp/>one<sp/>column<sp/>and<sp/>repeat\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/>A<sp/>=<sp/>gpstk::Matrix&lt;double&gt;(A,0,0,A.rows(),A.cols()-1);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Matrix<sp/>A(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>A.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>A.cols()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(7)<sp/>&lt;&lt;<sp/>A<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/>Asvd(A);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/>S<sp/>=<sp/>Asvd.S;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/>U<sp/>=<sp/>Asvd.U;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/>V<sp/>=<sp/>Asvd.V;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Singular<sp/>Values<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>S.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(7)<sp/>&lt;&lt;<sp/>S<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Matrix<sp/>U(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>U.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>U.cols()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(7)<sp/>&lt;&lt;<sp/>U<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Matrix<sp/>V(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>V.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>V.cols()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(7)<sp/>&lt;&lt;<sp/>V<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/>W<sp/>=<sp/>A;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/>W<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;S.size();<sp/>i++)<sp/>W(i,i)=S(i);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/>P<sp/>=<sp/>U<sp/>*<sp/>W<sp/>*<sp/>transpose(V);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/>P<sp/>=<sp/>P<sp/>-<sp/>A;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/>P.zeroize();</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Difference<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>P.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>P.cols()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>scientific<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(10)<sp/>&lt;&lt;<sp/>P<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MatrixTest5(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="362"><highlight class="normal">{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>--------------<sp/>Matrix<sp/>Test<sp/>5<sp/>---------------------------------\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N=7;<sp/></highlight><highlight class="comment">//<sp/>rows<sp/>=<sp/>columns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mat[N*N]={<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>storage<sp/>by<sp/>columns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>8.317,<sp/><sp/>6.212,<sp/><sp/>2.574,<sp/><sp/>5.317,<sp/><sp/>2.080,<sp/>-9.133,<sp/>-2.755,</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0.212,<sp/><sp/>3.292,<sp/><sp/>1.574,<sp/><sp/>1.028,<sp/><sp/>3.370,<sp/>-2.077,<sp/>-2.739,</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>5.740,<sp/><sp/>1.574,<sp/><sp/>1.911,<sp/><sp/>1.390,<sp/><sp/>8.544,<sp/><sp/>8.930,<sp/><sp/>9.216,</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>4.317,<sp/><sp/>1.028,<sp/><sp/>1.039,<sp/><sp/>7.126,<sp/><sp/>4.512,<sp/><sp/>8.538,<sp/><sp/>5.226,</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-1.109,<sp/><sp/>7.438,<sp/><sp/>7.236,<sp/><sp/>6.783,<sp/><sp/>0.356,<sp/>-9.509,<sp/>-0.109,</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0.174,<sp/><sp/>5.408,<sp/>-9.503,<sp/>-6.527,<sp/>-6.589,<sp/>-6.375,<sp/>-7.239,</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1.960,<sp/><sp/>6.592,<sp/><sp/>9.440,<sp/><sp/>4.428,<sp/>-4.531,<sp/><sp/>5.084,<sp/><sp/>4.296</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dat[N]={<sp/>14.289,<sp/><sp/>9.284,<sp/>-1.128,<sp/><sp/>8.389,<sp/>-6.929,<sp/><sp/>4.664,<sp/><sp/>7.590<sp/>};</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/>gpstk::Matrix&lt;double&gt;<sp/>A(N,N);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/>gpstk::Vector&lt;double&gt;<sp/>b(N);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/>A<sp/>=<sp/>mat;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/>A<sp/>=<sp/>gpstk::transpose(A);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/>b<sp/>=<sp/>dat;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Matrix<sp/>A(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>A.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>A.cols()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(7)<sp/>&lt;&lt;<sp/>A<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Vector<sp/>b(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>b.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(7)<sp/>&lt;&lt;<sp/>b<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nNow<sp/>solve<sp/>using<sp/>LUD\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/>gpstk::LUDecomp&lt;double&gt;<sp/>LUA;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/>LUA(A);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;LU:<sp/>Matrix<sp/>L(&quot;<sp/>&lt;&lt;<sp/>LUA.L.rows()<sp/>&lt;&lt;<sp/>&quot;,&quot;<sp/>&lt;&lt;<sp/>LUA.L.cols()<sp/>&lt;&lt;<sp/>&quot;)<sp/>:\n&quot;<sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(7)<sp/>&lt;&lt;<sp/>LUA.L<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;LU:<sp/>Matrix<sp/>U(&quot;<sp/>&lt;&lt;<sp/>LUA.U.rows()<sp/>&lt;&lt;<sp/>&quot;,&quot;<sp/>&lt;&lt;<sp/>LUA.U.cols()<sp/>&lt;&lt;<sp/>&quot;)<sp/>:\n&quot;<sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(7)<sp/>&lt;&lt;<sp/>LUA.U<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;LU:<sp/>Matrix<sp/>P(&quot;<sp/>&lt;&lt;<sp/>LUA.P.rows()<sp/>&lt;&lt;<sp/>&quot;,&quot;<sp/>&lt;&lt;<sp/>LUA.P.cols()<sp/>&lt;&lt;<sp/>&quot;)<sp/>:\n&quot;<sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(7)<sp/>&lt;&lt;<sp/>LUA.P<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Matrix<sp/>LU(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>LUA.LU.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>LUA.LU.cols()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(7)<sp/>&lt;&lt;<sp/>LUA.LU<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Determinant<sp/>of<sp/>A<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>scientific<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>LUA.det()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/>gpstk::Vector&lt;double&gt;<sp/>X(b),S;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{<sp/>LUA.backSub(X);<sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(gpstk::Exception&amp;<sp/>e)<sp/>{<sp/>cout<sp/>&lt;&lt;<sp/>e<sp/>&lt;&lt;<sp/>endl;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Solution<sp/>via<sp/>backsubstitution<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>X.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(7)<sp/>&lt;&lt;<sp/>X<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/>S<sp/>=<sp/>b-A*X;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Solution<sp/>residuals<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>S.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>scientific<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(7)<sp/>&lt;&lt;<sp/>S<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MatrixTest6(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)</highlight></codeline>
<codeline lineno="404"><highlight class="normal">{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>--------------<sp/>Matrix<sp/>Test<sp/>6<sp/>---------------------------------\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>filename(argv[7]);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/>gpstk::Matrix&lt;double&gt;<sp/>A;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iret=ReadMatrix(A,filename);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iret<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>could<sp/>not<sp/>open<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>filename<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dat[4]={1.,2.,3.,4.};</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/>gpstk::Vector&lt;double&gt;<sp/>b(4);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/>b<sp/>=<sp/>dat;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Matrix<sp/>A(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>A.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>A.cols()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(7)<sp/>&lt;&lt;<sp/>A<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Vector<sp/>b(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>b.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(7)<sp/>&lt;&lt;<sp/>b<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nNow<sp/>compute<sp/>Cholesky\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/>gpstk::Cholesky&lt;double&gt;<sp/>CA;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/>CA(A);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nCholesky<sp/>of<sp/>A<sp/>(U)<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>CA.U.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>CA.U.cols()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(7)<sp/>&lt;&lt;<sp/>CA.U<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nCholesky<sp/>of<sp/>A<sp/>(L)<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>CA.L.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>CA.L.cols()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(7)<sp/>&lt;&lt;<sp/>CA.L<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/>gpstk::Matrix&lt;double&gt;<sp/>B;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/>B<sp/>=<sp/>A<sp/>-<sp/>CA.U<sp/>*<sp/>gpstk::transpose(CA.U);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nDifference<sp/>U*UT<sp/>with<sp/>matrix<sp/>A(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>B.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>B.cols()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>scientific<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(7)<sp/>&lt;&lt;<sp/>B<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/>B<sp/>=<sp/>A<sp/>-<sp/>CA.L<sp/>*<sp/>gpstk::transpose(CA.L);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nDifference<sp/>L*LT<sp/>with<sp/>matrix<sp/>A(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>B.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>B.cols()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>scientific<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(7)<sp/>&lt;&lt;<sp/>B<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/>gpstk::Vector&lt;double&gt;<sp/>X(b);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/>CA.backSub(X);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nSolution<sp/>via<sp/>backsubstitution<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>X.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(7)<sp/>&lt;&lt;<sp/>X<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/>X<sp/>=<sp/>b-A*X;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Solution<sp/>residuals<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>X.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>scientific<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(7)<sp/>&lt;&lt;<sp/>X<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MatrixTest7(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)</highlight></codeline>
<codeline lineno="440"><highlight class="normal">{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>--------------<sp/>Matrix<sp/>Test<sp/>7<sp/>---------------------------------\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>filename(argv[8]);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/>gpstk::Matrix&lt;double&gt;<sp/>A;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iret=ReadMatrix(A,filename);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iret<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>could<sp/>not<sp/>open<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>filename<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Matrix<sp/>A(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>A.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>A.cols()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(7)<sp/>&lt;&lt;<sp/>A<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nNow<sp/>compute<sp/>the<sp/>Householder<sp/>transformation\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/>gpstk::Householder&lt;double&gt;<sp/>HHA;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/>HHA(A);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;HH:<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>HHA.A.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>HHA.A.cols()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(7)<sp/>&lt;&lt;<sp/>HHA.A<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MatrixTest8(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="458"><highlight class="normal">{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>--------------<sp/>Matrix<sp/>Test<sp/>8<sp/>---------------------------------\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n=6;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>big,small,cond;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/>gpstk::Vector&lt;double&gt;V;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/>gpstk::Matrix&lt;double&gt;<sp/>M(n,n),Minv,Prod;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;n;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M(i,j)<sp/>=<sp/>1.0/(i+j+1.0);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Tough<sp/>matrix<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>M.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>M.cols()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(6)<sp/>&lt;&lt;<sp/>setw(9)<sp/>&lt;&lt;<sp/>M<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/>cond<sp/>=<sp/>gpstk::condNum(M,big,small);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Condition<sp/>number<sp/>is<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>big<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>scientific<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>small;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(small<sp/>&gt;<sp/>0.0)<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>big/small;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;3;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i==0)<sp/>{<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Gaussian<sp/>elimiation:\n&quot;</highlight><highlight class="normal">;<sp/>Minv<sp/>=<sp/>inverse(M);<sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i==1)<sp/>{<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;LUD:\n&quot;</highlight><highlight class="normal">;<sp/>Minv<sp/>=<sp/>inverseLUD(M);<sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i==2)<sp/>{<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SVD:\n&quot;</highlight><highlight class="normal">;<sp/>Minv<sp/>=<sp/>inverseSVD(M);<sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(gpstk::Exception&amp;<sp/>e)<sp/>{<sp/>cout<sp/>&lt;&lt;<sp/>e<sp/>&lt;&lt;<sp/>endl;<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Inverse<sp/>matrix<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>Minv.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>Minv.cols()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(13)<sp/>&lt;&lt;<sp/>Minv<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Prod<sp/>=<sp/>Minv<sp/>*<sp/>M;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//V.zeroTolerance<sp/>=<sp/>1.e-6;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Prod.zeroize();</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Unity<sp/>matrix<sp/>?<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>Prod.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>Prod.cols()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>?<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(9)<sp/>&lt;&lt;<sp/>setw(12)<sp/>&lt;&lt;<sp/>Prod<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal">}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MatrixTest9(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)</highlight></codeline>
<codeline lineno="494"><highlight class="normal">{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>--------------<sp/>Matrix<sp/>Test<sp/>9<sp/>---------------------------------\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Read<sp/>matrix<sp/>and<sp/>vector<sp/>(in<sp/>form<sp/>M||V)<sp/>from<sp/>file,<sp/>invert<sp/>and<sp/>solve\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cond,big,small;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/>gpstk::Matrix&lt;double&gt;<sp/>R,A,Ainv,P;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/>gpstk::Vector&lt;double&gt;<sp/>B,X;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;argc;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>filename=argv[i];</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>filename;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iret=ReadMatrix(R,filename);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>iret<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>Matrix(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>R.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>R.cols()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(10)<sp/>&lt;&lt;<sp/>R<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pick<sp/>off<sp/>last<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>B<sp/>=<sp/>gpstk::Vector&lt;double&gt;(R.colCopy(R.cols()-1));</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>all<sp/>but<sp/>last<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>=<sp/>gpstk::Matrix&lt;double&gt;(R,0,0,R.rows(),R.cols()-1);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Partials<sp/>Matrix<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>A.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>A.cols()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(10)<sp/>&lt;&lt;<sp/>A<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Data<sp/>vector<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>B.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(10)<sp/>&lt;&lt;<sp/>B<sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(A.rows()<sp/>!=<sp/>A.cols())<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpstk::Matrix&lt;double&gt;<sp/>AT;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AT<sp/>=<sp/>gpstk::transpose(A);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>=<sp/>AT*A;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ATA<sp/>Matrix(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>A.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>A.cols()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(10)<sp/>&lt;&lt;<sp/>A<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cond<sp/>=<sp/>gpstk::condNum(A,big,small);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Condition<sp/>number<sp/>is<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>big<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>scientific<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>small;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>big/small<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ainv=gpstk::inverse(A);<sp/></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Inverse<sp/>matrix<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>Ainv.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>Ainv.cols()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(10)<sp/>&lt;&lt;<sp/>Ainv<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P<sp/>=<sp/>Ainv<sp/>*<sp/>A;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Unity<sp/>matrix<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>P.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>P.cols()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>?<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(9)<sp/>&lt;&lt;<sp/>setw(12)<sp/>&lt;&lt;<sp/>P<sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//X<sp/>=<sp/>Ainv<sp/>*<sp/>B;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;Solution<sp/>vector<sp/>(&quot;<sp/>&lt;&lt;<sp/>X.size()<sp/>&lt;&lt;<sp/>&quot;)<sp/>:\n&quot;<sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(10)<sp/>&lt;&lt;<sp/>X<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(gpstk::Exception&amp;<sp/>e)<sp/>{<sp/>cout<sp/>&lt;&lt;<sp/>e<sp/>&lt;&lt;<sp/>endl;<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal">}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PolyTest(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="536"><highlight class="normal">{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>--------------<sp/>Poly<sp/>Test<sp/>---------------------------------\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>33<sp/>points<sp/>in<sp/>each<sp/>of<sp/>two<sp/>fits:</highlight></codeline>
<codeline lineno="539"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>timetag<sp/><sp/><sp/><sp/><sp/><sp/>t<sp/><sp/><sp/><sp/><sp/>data<sp/><sp/><sp/><sp/>fit<sp/><sp/>resid</highlight></codeline>
<codeline lineno="540"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351569.981<sp/>-1.0000<sp/>-1.750<sp/>-1.755<sp/><sp/>0.005</highlight></codeline>
<codeline lineno="541"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351580.003<sp/>-0.9375<sp/>-1.702<sp/>-1.713<sp/><sp/>0.011</highlight></codeline>
<codeline lineno="542"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351590.026<sp/>-0.8750<sp/>-1.663<sp/>-1.672<sp/><sp/>0.009</highlight></codeline>
<codeline lineno="543"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351599.962<sp/>-0.8125<sp/>-1.639<sp/>-1.633<sp/>-0.006</highlight></codeline>
<codeline lineno="544"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351609.984<sp/>-0.7500<sp/>-1.590<sp/>-1.595<sp/><sp/>0.005</highlight></codeline>
<codeline lineno="545"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351620.006<sp/>-0.6875<sp/>-1.579<sp/>-1.558<sp/>-0.020</highlight></codeline>
<codeline lineno="546"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351630.029<sp/>-0.6250<sp/>-1.536<sp/>-1.523<sp/>-0.013</highlight></codeline>
<codeline lineno="547"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351639.965<sp/>-0.5625<sp/>-1.502<sp/>-1.489<sp/>-0.013</highlight></codeline>
<codeline lineno="548"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351649.987<sp/>-0.5000<sp/>-1.441<sp/>-1.457<sp/><sp/>0.015</highlight></codeline>
<codeline lineno="549"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351660.010<sp/>-0.4375<sp/>-1.445<sp/>-1.426<sp/>-0.019</highlight></codeline>
<codeline lineno="550"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351670.032<sp/>-0.3750<sp/>-1.412<sp/>-1.396<sp/>-0.016</highlight></codeline>
<codeline lineno="551"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351679.968<sp/>-0.3125<sp/>-1.370<sp/>-1.368<sp/>-0.002</highlight></codeline>
<codeline lineno="552"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351689.990<sp/>-0.2500<sp/>-1.328<sp/>-1.340<sp/><sp/>0.012</highlight></codeline>
<codeline lineno="553"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351700.013<sp/>-0.1875<sp/>-1.286<sp/>-1.315<sp/><sp/>0.029</highlight></codeline>
<codeline lineno="554"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351710.035<sp/>-0.1250<sp/>-1.266<sp/>-1.290<sp/><sp/>0.025</highlight></codeline>
<codeline lineno="555"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351719.971<sp/>-0.0625<sp/>-1.270<sp/>-1.267<sp/>-0.003</highlight></codeline>
<codeline lineno="556"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351729.994<sp/><sp/>0.0000<sp/>-1.249<sp/>-1.246<sp/>-0.003</highlight></codeline>
<codeline lineno="557"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351740.016<sp/><sp/>0.0625<sp/>-1.235<sp/>-1.226<sp/>-0.010</highlight></codeline>
<codeline lineno="558"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351750.038<sp/><sp/>0.1250<sp/>-1.197<sp/>-1.207<sp/><sp/>0.010</highlight></codeline>
<codeline lineno="559"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351759.974<sp/><sp/>0.1875<sp/>-1.214<sp/>-1.189<sp/>-0.025</highlight></codeline>
<codeline lineno="560"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351769.997<sp/><sp/>0.2500<sp/>-1.183<sp/>-1.173<sp/>-0.010</highlight></codeline>
<codeline lineno="561"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351780.019<sp/><sp/>0.3125<sp/>-1.156<sp/>-1.158<sp/><sp/>0.003</highlight></codeline>
<codeline lineno="562"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351790.042<sp/><sp/>0.3750<sp/>-1.135<sp/>-1.145<sp/><sp/>0.010</highlight></codeline>
<codeline lineno="563"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351799.978<sp/><sp/>0.4375<sp/>-1.134<sp/>-1.133<sp/>-0.001</highlight></codeline>
<codeline lineno="564"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351810.000<sp/><sp/>0.5000<sp/>-1.098<sp/>-1.122<sp/><sp/>0.024</highlight></codeline>
<codeline lineno="565"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351820.022<sp/><sp/>0.5625<sp/>-1.102<sp/>-1.113<sp/><sp/>0.011</highlight></codeline>
<codeline lineno="566"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351829.958<sp/><sp/>0.6250<sp/>-1.118<sp/>-1.105<sp/>-0.013</highlight></codeline>
<codeline lineno="567"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351839.981<sp/><sp/>0.6875<sp/>-1.103<sp/>-1.098<sp/>-0.005</highlight></codeline>
<codeline lineno="568"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351850.003<sp/><sp/>0.7500<sp/>-1.115<sp/>-1.093<sp/>-0.022</highlight></codeline>
<codeline lineno="569"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351860.026<sp/><sp/>0.8125<sp/>-1.076<sp/>-1.089<sp/><sp/>0.013</highlight></codeline>
<codeline lineno="570"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351869.962<sp/><sp/>0.8750<sp/>-1.101<sp/>-1.086<sp/>-0.015</highlight></codeline>
<codeline lineno="571"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351879.984<sp/><sp/>0.9375<sp/>-1.068<sp/>-1.085<sp/><sp/>0.017</highlight></codeline>
<codeline lineno="572"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351890.006<sp/><sp/>1.0000<sp/>-1.088<sp/>-1.085<sp/>-0.003</highlight></codeline>
<codeline lineno="573"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>timetag<sp/><sp/><sp/><sp/><sp/><sp/>t<sp/><sp/><sp/><sp/><sp/>data<sp/><sp/><sp/><sp/>fit<sp/><sp/>resid</highlight></codeline>
<codeline lineno="574"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351900.029<sp/>-1.0000<sp/>-1.088<sp/>-1.029<sp/>-0.060</highlight></codeline>
<codeline lineno="575"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351909.965<sp/>-0.9375<sp/>-1.119<sp/>-1.068<sp/>-0.051</highlight></codeline>
<codeline lineno="576"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351919.987<sp/>-0.8750<sp/>-1.118<sp/>-1.105<sp/>-0.013</highlight></codeline>
<codeline lineno="577"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351930.010<sp/>-0.8125<sp/>-1.158<sp/>-1.140<sp/>-0.018</highlight></codeline>
<codeline lineno="578"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351940.032<sp/>-0.7500<sp/>-1.146<sp/>-1.174<sp/><sp/>0.028</highlight></codeline>
<codeline lineno="579"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351949.968<sp/>-0.6875<sp/>-1.201<sp/>-1.206<sp/><sp/>0.004</highlight></codeline>
<codeline lineno="580"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351959.990<sp/>-0.6250<sp/>-1.207<sp/>-1.235<sp/><sp/>0.029</highlight></codeline>
<codeline lineno="581"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351970.013<sp/>-0.5625<sp/>-1.222<sp/>-1.264<sp/><sp/>0.041</highlight></codeline>
<codeline lineno="582"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351980.035<sp/>-0.5000<sp/>-1.230<sp/>-1.290<sp/><sp/>0.059</highlight></codeline>
<codeline lineno="583"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351989.971<sp/>-0.4375<sp/>-1.269<sp/>-1.314<sp/><sp/>0.045</highlight></codeline>
<codeline lineno="584"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>351999.994<sp/>-0.3750<sp/>-1.269<sp/>-1.337<sp/><sp/>0.068</highlight></codeline>
<codeline lineno="585"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>352010.016<sp/>-0.3125<sp/>-1.335<sp/>-1.358<sp/><sp/>0.022</highlight></codeline>
<codeline lineno="586"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>352020.038<sp/>-0.2500<sp/>-1.359<sp/>-1.377<sp/><sp/>0.018</highlight></codeline>
<codeline lineno="587"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>352029.974<sp/>-0.1875<sp/>-1.391<sp/>-1.394<sp/><sp/>0.003</highlight></codeline>
<codeline lineno="588"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>352039.997<sp/>-0.1250<sp/>-1.391<sp/>-1.410<sp/><sp/>0.019</highlight></codeline>
<codeline lineno="589"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>352050.019<sp/>-0.0625<sp/>-1.432<sp/>-1.423<sp/>-0.009</highlight></codeline>
<codeline lineno="590"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>352060.042<sp/><sp/>0.0000<sp/>-1.440<sp/>-1.435<sp/>-0.004</highlight></codeline>
<codeline lineno="591"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>352069.978<sp/><sp/>0.0625<sp/>-1.483<sp/>-1.445<sp/>-0.038</highlight></codeline>
<codeline lineno="592"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>352080.000<sp/><sp/>0.1250<sp/>-1.520<sp/>-1.453<sp/>-0.067</highlight></codeline>
<codeline lineno="593"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>352090.022<sp/><sp/>0.1875<sp/>-1.514<sp/>-1.460<sp/>-0.055</highlight></codeline>
<codeline lineno="594"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>352099.958<sp/><sp/>0.2500<sp/>-1.514<sp/>-1.464<sp/>-0.050</highlight></codeline>
<codeline lineno="595"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>352109.981<sp/><sp/>0.3125<sp/>-1.478<sp/>-1.467<sp/>-0.010</highlight></codeline>
<codeline lineno="596"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>352120.003<sp/><sp/>0.3750<sp/>-1.496<sp/>-1.468<sp/>-0.028</highlight></codeline>
<codeline lineno="597"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>352130.026<sp/><sp/>0.4375<sp/>-1.508<sp/>-1.467<sp/>-0.040</highlight></codeline>
<codeline lineno="598"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>352139.962<sp/><sp/>0.5000<sp/>-1.507<sp/>-1.465<sp/>-0.043</highlight></codeline>
<codeline lineno="599"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>352149.984<sp/><sp/>0.5625<sp/>-1.437<sp/>-1.460<sp/><sp/>0.023</highlight></codeline>
<codeline lineno="600"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>352160.006<sp/><sp/>0.6250<sp/>-1.439<sp/>-1.454<sp/><sp/>0.015</highlight></codeline>
<codeline lineno="601"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>352170.029<sp/><sp/>0.6875<sp/>-1.419<sp/>-1.446<sp/><sp/>0.027</highlight></codeline>
<codeline lineno="602"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>352179.965<sp/><sp/>0.7500<sp/>-1.388<sp/>-1.436<sp/><sp/>0.048</highlight></codeline>
<codeline lineno="603"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>352189.987<sp/><sp/>0.8125<sp/>-1.408<sp/>-1.424<sp/><sp/>0.016</highlight></codeline>
<codeline lineno="604"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>352200.010<sp/><sp/>0.8750<sp/>-1.390<sp/>-1.411<sp/><sp/>0.021</highlight></codeline>
<codeline lineno="605"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>352210.032<sp/><sp/>0.9375<sp/>-1.391<sp/>-1.395<sp/><sp/>0.005</highlight></codeline>
<codeline lineno="606"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>352219.968<sp/><sp/>1.0000<sp/>-1.385<sp/>-1.378<sp/>-0.007</highlight></codeline>
<codeline lineno="607"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t[33]<sp/>=<sp/>{<sp/>-1.0000,<sp/>-0.9375,<sp/>-0.8750,<sp/>-0.8125,<sp/>-0.7500,<sp/>-0.6875,</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-0.6250,<sp/>-0.5625,<sp/>-0.5000,<sp/>-0.4375,<sp/>-0.3750,<sp/>-0.3125,<sp/>-0.2500,<sp/>-0.1875,</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-0.1250,<sp/>-0.0625,<sp/>0.0000,<sp/>0.0625,<sp/>0.1250,<sp/>0.1875,<sp/>0.2500,<sp/>0.3125,<sp/>0.3750,</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0.4375,<sp/>0.5000,<sp/>0.5625,<sp/>0.6250,<sp/>0.6875,<sp/>0.7500,<sp/>0.8125,<sp/>0.8750,<sp/>0.9375,</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1.0000<sp/>};</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d1[33]<sp/>=<sp/>{<sp/>-1.750,<sp/>-1.702,<sp/>-1.663,<sp/>-1.639,<sp/>-1.590,<sp/>-1.579,<sp/>-1.536,</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-1.502,<sp/>-1.441,<sp/>-1.445,<sp/>-1.412,<sp/>-1.370,<sp/>-1.328,<sp/>-1.286,<sp/>-1.266,<sp/>-1.270,</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-1.249,<sp/>-1.235,<sp/>-1.197,<sp/>-1.214,<sp/>-1.183,<sp/>-1.156,<sp/>-1.135,<sp/>-1.134,<sp/>-1.098,</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-1.102,<sp/>-1.118,<sp/>-1.103,<sp/>-1.115,<sp/>-1.076,<sp/>-1.101,<sp/>-1.068,<sp/>-1.088<sp/>};</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d2[33]<sp/>=<sp/>{<sp/>-1.088,<sp/>-1.119,<sp/>-1.118,<sp/>-1.158,<sp/>-1.146,<sp/>-1.201,<sp/>-1.207,</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-1.222,<sp/>-1.230,<sp/>-1.269,<sp/>-1.269,<sp/>-1.335,<sp/>-1.359,<sp/>-1.391,<sp/>-1.391,<sp/>-1.432,</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-1.440,<sp/>-1.483,<sp/>-1.520,<sp/>-1.514,<sp/>-1.514,<sp/>-1.478,<sp/>-1.496,<sp/>-1.508,<sp/>-1.507,</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-1.437,<sp/>-1.439,<sp/>-1.419,<sp/>-1.388,<sp/>-1.408,<sp/>-1.390,<sp/>-1.391,<sp/>-1.385<sp/>};</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/>gpstk::Vector&lt;double&gt;<sp/>T(33),D1(33),D2(33);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/>T<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/>D1<sp/>=<sp/>d1;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/>D2<sp/>=<sp/>d2;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;Vector<sp/>T(&quot;<sp/>&lt;&lt;<sp/>T.size()<sp/>&lt;&lt;<sp/>&quot;)<sp/>:\n&quot;<sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(7)<sp/>&lt;&lt;<sp/>T<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;Vector<sp/>D1(&quot;<sp/>&lt;&lt;<sp/>D1.size()<sp/>&lt;&lt;<sp/>&quot;)<sp/>:\n&quot;<sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(7)<sp/>&lt;&lt;<sp/>D1<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;Vector<sp/>D2(&quot;<sp/>&lt;&lt;<sp/>D2.size()<sp/>&lt;&lt;<sp/>&quot;)<sp/>:\n&quot;<sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(7)<sp/>&lt;&lt;<sp/>D2<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,rev=1;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/>gpstk::Vector&lt;double&gt;<sp/>Fit,Resid,Sol;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/>gpstk::PolyFit&lt;double&gt;<sp/>PF(3);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/>gpstk::Stats&lt;double&gt;<sp/>St1,St2;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/>gpstk::TwoSampleStats&lt;double&gt;<sp/>Tss;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rev==1)<sp/>PF.Add(D1,T);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;T.size();<sp/>i++)<sp/>PF.Add(D2[i],T[i]);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gpstk::Matrix&lt;double&gt;<sp/>C;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>C<sp/>=<sp/>PF.Covariance();</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Matrix<sp/>Cov(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>C.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>C.cols()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(8)<sp/>&lt;&lt;<sp/>C<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Sol<sp/>=<sp/>PF.Solution();</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Vector<sp/>Sol(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>Sol.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>setw(8)<sp/>&lt;&lt;<sp/>Sol<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Fit<sp/>=<sp/>PF.Evaluate(T);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Resid<sp/>=<sp/>(rev==1?D1:D2)-Fit;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>t<sp/><sp/><sp/><sp/><sp/>data<sp/><sp/><sp/><sp/>fit<sp/><sp/>resid\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;T.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>setw(2)<sp/>&lt;&lt;<sp/>i;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setw(8)<sp/>&lt;&lt;<sp/>setprecision(4)<sp/>&lt;&lt;<sp/>T(i);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setw(8)<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>(rev==1?D1(i):D2(i));</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setw(8)<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>Fit(i);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>setw(8)<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>Resid(i);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>St1.Add(Resid(i));</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>St2.Add(rev==1?D1(i):D2(i));</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tss.Add(T(i),(rev==1?D1(i):D2(i)));</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Stats<sp/>on<sp/>residuals\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>scientific<sp/>&lt;&lt;<sp/>setw(10)<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>St1<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Stats<sp/>on<sp/>data\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>scientific<sp/>&lt;&lt;<sp/>setw(10)<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>St2<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;2-sample<sp/>Stats<sp/>on<sp/>time,data\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>scientific<sp/>&lt;&lt;<sp/>setw(10)<sp/>&lt;&lt;<sp/>setprecision(3)<sp/>&lt;&lt;<sp/>Tss<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(++rev&gt;2)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PF.Reset();</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>St1.Reset();</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>St2.Reset();</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Tss.Reset();</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1);</highlight></codeline>
<codeline lineno="674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)</highlight></codeline>
<codeline lineno="677"><highlight class="normal">{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc!=10)</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Need<sp/>9<sp/>files<sp/>to<sp/>chew<sp/>on&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(-1);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/>VectorTest();</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/>MatrixTest1(argc,<sp/>argv);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>general<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/>MatrixTest2();<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>condition<sp/>number<sp/>and<sp/>inverse</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/>MatrixTest3(argc,<sp/>argv);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>and<sp/>condition<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/>MatrixTest4();<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SVD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/>MatrixTest5();<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LUD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/>MatrixTest6(argc,<sp/>argv);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cholesky</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/>MatrixTest7(argc,<sp/>argv);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Householder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/>MatrixTest8();<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inverse<sp/>via<sp/>Gauss,LUD,SVD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/>MatrixTest9(argc,<sp/>argv);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>a<sp/>matrix<sp/>and<sp/>data<sp/>vector<sp/>and<sp/>solve<sp/>Ax=b</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/>PolyTest();<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PolyFit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="696"><highlight class="normal">}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/asymingt/Dropbox/Documents/UCL/Research/Simulator/uas_framework/thirdparty/gpstk/oldtests/MatrixTest.cpp"/>
  </compounddef>
</doxygen>
