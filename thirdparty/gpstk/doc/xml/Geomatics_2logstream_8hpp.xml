<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="Geomatics_2logstream_8hpp" kind="file">
    <compoundname>Geomatics/logstream.hpp</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>ident<sp/>&quot;$Id$&quot;</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="8"><highlight class="preprocessor">#ifndef<sp/>LOGSTREAMINCLUDE</highlight></codeline>
<codeline lineno="9"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>LOGSTREAMINCLUDE</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdio&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>LogLevel<sp/>{ERROR,<sp/>WARNING,<sp/>INFO,<sp/>VERBOSE,<sp/>DEBUG,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG1,<sp/>DEBUG2,<sp/>DEBUG3,<sp/>DEBUG4,<sp/>DEBUG5,<sp/>DEBUG6,<sp/>DEBUG7<sp/>};</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor">#ifndef<sp/>FILELOG_MAX_LEVEL</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>FILELOG_MAX_LEVEL<sp/>DEBUG7</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="28"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Log</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/>Log()<sp/>{};</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~Log();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/>std::ostringstream&amp;<sp/>Put(LogLevel<sp/>level<sp/>=<sp/>INFO);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>ReportTimeTags();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>ReportLevels();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>LogLevel&amp;<sp/>ReportingLevel();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>ToString(LogLevel<sp/>level);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>LogLevel<sp/>FromString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>level);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/>std::ostringstream<sp/>os;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>see<sp/>kludge<sp/>note<sp/>below</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>LogLevel<sp/>reportingLevel;<sp/><sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dumpTimeTags;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dumpLevels;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/>Log(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Log&amp;);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/>Log&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Log&amp;);<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/>std::string<sp/>NowTime(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal">};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>std::ostringstream&amp;<sp/>Log&lt;T&gt;::Put(LogLevel<sp/>level)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Log&lt;T&gt;::ReportTimeTags())<sp/>os<sp/>&lt;&lt;<sp/>NowTime()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Log&lt;T&gt;::ReportLevels())<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>ToString(level)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>indentation<sp/>for<sp/>deep<sp/>debug<sp/>levels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(level<sp/>&gt;<sp/>DEBUG)<sp/>os<sp/>&lt;&lt;<sp/>std::string(2*(level-DEBUG),</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>Log&lt;T&gt;::~Log()</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>std::endl;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TD<sp/>make<sp/>optional?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/>T::Output(os.str());</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>Log&lt;T&gt;::ReportLevels()</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>WIN32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>see<sp/>kludge<sp/>note<sp/>below</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dumpLevels<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="85"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dumpLevels;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>Log&lt;T&gt;::ReportTimeTags()</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>WIN32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>see<sp/>kludge<sp/>note<sp/>below</highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dumpTimeTags<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dumpTimeTags;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>LogLevel&amp;<sp/>Log&lt;T&gt;::ReportingLevel()</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>WIN32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>see<sp/>kludge<sp/>note<sp/>below</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>LogLevel<sp/>reportingLevel<sp/>=<sp/>INFO;<sp/></highlight><highlight class="comment">//<sp/>FILELOG_MAX_LEVEL;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reportingLevel;</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>std::string<sp/>Log&lt;T&gt;::ToString(LogLevel<sp/>level)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>note<sp/>enum<sp/>LogLevel<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>buffer[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;ERROR&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;WARNING&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;VERBOSE&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;DEBUG&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;DEBUG1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;DEBUG2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;DEBUG3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;DEBUG4&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;DEBUG5&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;DEBUG6&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;DEBUG7&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer[level];</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/>LogLevel<sp/>Log&lt;T&gt;::FromString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>level)</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>note<sp/>enum<sp/>LogLevel<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(level<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;DEBUG7&quot;</highlight><highlight class="normal">)<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DEBUG7;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(level<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;DEBUG6&quot;</highlight><highlight class="normal">)<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DEBUG6;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(level<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;DEBUG5&quot;</highlight><highlight class="normal">)<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DEBUG5;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(level<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;DEBUG4&quot;</highlight><highlight class="normal">)<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DEBUG4;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(level<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;DEBUG3&quot;</highlight><highlight class="normal">)<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DEBUG3;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(level<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;DEBUG2&quot;</highlight><highlight class="normal">)<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DEBUG2;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(level<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;DEBUG1&quot;</highlight><highlight class="normal">)<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DEBUG1;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(level<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;DEBUG&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DEBUG;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(level<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;VERBOSE&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VERBOSE;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(level<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>INFO;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(level<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;WARNING&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>WARNING;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(level<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;ERROR&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/>Log&lt;T&gt;().Put(WARNING)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>logging<sp/>level<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>level<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;.<sp/>Using<sp/>INFO<sp/>level<sp/>instead.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>INFO;</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//<sp/>time<sp/>tag<sp/>-<sp/>platform<sp/>dependent<sp/>-----------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">//#if<sp/>defined(WIN32)<sp/>||<sp/>defined(_WIN32)<sp/>||<sp/>defined(__WIN32__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight></codeline>
<codeline lineno="135"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/timeb.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>Log&lt;T&gt;::NowTime()</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/>_timeb<sp/>t;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/>_ftime(&amp;t);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>sec=t.time;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt=double(sec)+t.millitm/1000.;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/>sec<sp/>-=<sp/>long(dt/86400)*86400;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/>dt<sp/>=<sp/>double(sec)+t.millitm/1000.;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>result[100]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h=int(dt/3600.);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/>dt<sp/>-=<sp/>h*3600.;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m=int(dt/60.);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/>dt<sp/>-=<sp/>m*60.;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s=int(dt);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/>dt<sp/>-=<sp/>s;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/>std::sprintf(result,</highlight><highlight class="stringliteral">&quot;%02d:%02d:%02d.%03d&quot;</highlight><highlight class="normal">,h,m,s,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(dt*1000.));</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/><sp/><sp/>//<sp/>not<sp/>WIN32</highlight></codeline>
<codeline lineno="156"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/>Log&lt;T&gt;::NowTime()</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[11];</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/>time_t<sp/>t;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/>time(&amp;t);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/>tm<sp/>r<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/>strftime(buffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buffer),<sp/></highlight><highlight class="stringliteral">&quot;%X&quot;</highlight><highlight class="normal">,<sp/>localtime_r(&amp;t,<sp/>&amp;r));</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>tv;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/>gettimeofday(&amp;tv,<sp/>0);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>result[100]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/>std::sprintf(result,<sp/></highlight><highlight class="stringliteral">&quot;%s.%03ld&quot;</highlight><highlight class="normal">,<sp/>buffer,<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)tv.tv_usec<sp/>/<sp/>1000);<sp/></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//WIN32</highlight></codeline>
<codeline lineno="173"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-------<sp/>end<sp/>class<sp/>LOG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ConfigureLOGstream</highlight></codeline>
<codeline lineno="237"><highlight class="normal">{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::ostream*&amp;<sp/>Stream();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Output(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>msg);</highlight></codeline>
<codeline lineno="248"><highlight class="normal">};</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream*&amp;<sp/>ConfigureLOGstream::Stream()</highlight></codeline>
<codeline lineno="251"><highlight class="normal">{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::ostream<sp/>*pStream<sp/>=<sp/>&amp;(std::cout);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pStream;</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConfigureLOGstream::Output(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>msg)</highlight></codeline>
<codeline lineno="257"><highlight class="normal">{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/>std::ostream<sp/>*pStream<sp/>=<sp/>Stream();</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!pStream)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/>*pStream<sp/>&lt;&lt;<sp/>msg<sp/>&lt;&lt;<sp/>std::flush;</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="comment">//-----<sp/>end<sp/>class<sp/>ConfigureLOGstream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="keyword">class<sp/></highlight><highlight class="normal">ConfigureLOG<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Log&lt;ConfigureLOGstream&gt;<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::ostream*&amp;<sp/>Stream()</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ConfigureLOGstream::Stream();<sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>LogLevel<sp/>Level(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FromString(str);<sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal">};</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="comment">//-----<sp/>end<sp/>class<sp/>ConfigureLOG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>terrible<sp/>kludge<sp/>that<sp/>nevertheless<sp/>is<sp/>necessary<sp/>under<sp/>Windows<sp/>2003<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="comment">//<sp/>2005<sp/>because<sp/>global<sp/>optimization<sp/>(compiler<sp/>switch<sp/>/O1<sp/>or<sp/>/O2<sp/>or<sp/>/Og)<sp/>causes<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment">//<sp/>reportingLevel<sp/>to<sp/>be<sp/>defined<sp/>ONLY<sp/>in<sp/>the<sp/>module<sp/>in<sp/>which<sp/>ReportingLevel()<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="comment">//<sp/>assigned.<sp/>Rather<sp/>than<sp/>give<sp/>up<sp/>optimization<sp/>or<sp/>ReportingLevel(),<sp/>I<sp/>came<sp/>up<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>kludge,<sp/>which<sp/>is<sp/>to<sp/>remove<sp/>reportingLevel<sp/>from<sp/>the<sp/>ReportingLevel()<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>make<sp/>it<sp/>a<sp/>static<sp/>member<sp/>of<sp/>the<sp/>class,<sp/>then<sp/>initialize<sp/>it<sp/>outside<sp/>the<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Similarly<sp/>for<sp/>dumpTimeTags<sp/>and<sp/>dumpLevels.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Notice<sp/>that<sp/>this<sp/>ought<sp/>to<sp/>fail<sp/>(!)<sp/>because<sp/>putting<sp/>this<sp/>initialization<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="comment">//<sp/>include<sp/>file<sp/>means<sp/>that<sp/>it<sp/>occurs<sp/>more<sp/>than<sp/>once<sp/>-<sp/>in<sp/>every<sp/>module<sp/>in<sp/>which<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment">//<sp/>appears.<sp/>However<sp/>Windows<sp/>allows<sp/>this;<sp/>hence<sp/>I<sp/>have<sp/>commented<sp/>out<sp/>the<sp/>inner<sp/>macro</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="comment">//<sp/>here.<sp/>Ah,<sp/>the<sp/>joys<sp/>of<sp/>developing<sp/>under<sp/>MS....</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight></codeline>
<codeline lineno="288"><highlight class="preprocessor"></highlight><highlight class="comment">//#ifndef<sp/>LOGSTREAM_INITIALIZE_REPORTING_LEVEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>LOGSTREAM_INITIALIZE_REPORTING_LEVEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/>LogLevel<sp/>Log&lt;ConfigureLOGstream&gt;::reportingLevel<sp/>=<sp/>INFO;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Log&lt;ConfigureLOGstream&gt;::dumpTimeTags<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Log&lt;ConfigureLOGstream&gt;::dumpLevels<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="comment">//#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="295"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="297"><highlight class="preprocessor">#define<sp/>LOG(level)<sp/>\</highlight></codeline>
<codeline lineno="298"><highlight class="preprocessor"><sp/><sp/><sp/>if(level<sp/>&gt;<sp/>FILELOG_MAX_LEVEL)<sp/>{;}\</highlight></codeline>
<codeline lineno="299"><highlight class="preprocessor"><sp/><sp/><sp/>else<sp/>if(level<sp/>&gt;<sp/>ConfigureLOG::ReportingLevel()||!ConfigureLOGstream::Stream())<sp/>{;}\</highlight></codeline>
<codeline lineno="300"><highlight class="preprocessor"><sp/><sp/><sp/>else<sp/>ConfigureLOG().Put(level)</highlight></codeline>
<codeline lineno="301"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="comment">//<sp/>conveniences</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>pLOGstrm<sp/>ConfigureLOGstream::Stream()</highlight></codeline>
<codeline lineno="304"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>LOGstrm<sp/>*(ConfigureLOGstream::Stream())</highlight></codeline>
<codeline lineno="305"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>LOGlevel<sp/>ConfigureLOG::ReportingLevel()</highlight></codeline>
<codeline lineno="306"><highlight class="preprocessor"></highlight><highlight class="comment">//#define<sp/>showLOGlevel<sp/>ConfigureLOG::ReportLevels()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>showLOGtime<sp/>ConfigureLOG::ReportTimeTags()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="comment">//#pragma<sp/>optimize(&quot;g&quot;,off)<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>turn<sp/>off<sp/>global<sp/>optimization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="comment">//#pragma<sp/>optimize(&quot;&quot;,on)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>turn<sp/>on<sp/>optimizations<sp/>turned<sp/>on<sp/>by<sp/>compiler<sp/>switch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//LOGSTREAMINCLUDE<sp/>---<sp/>end<sp/>of<sp/>the<sp/>include<sp/>file.<sp/>Test<sp/>code<sp/>follows<sp/>in<sp/>comments.</highlight></codeline>
<codeline lineno="316"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Example:</highlight></codeline>
<codeline lineno="318"><highlight class="comment">//<sp/>testls.cpp</highlight></codeline>
<codeline lineno="319"><highlight class="comment">#include<sp/>&quot;logstream.hpp&quot;</highlight></codeline>
<codeline lineno="320"><highlight class="comment">#include<sp/>&lt;fstream&gt;</highlight></codeline>
<codeline lineno="321"><highlight class="comment"></highlight></codeline>
<codeline lineno="322"><highlight class="comment">void<sp/>func(void);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>testls0.cpp</highlight></codeline>
<codeline lineno="323"><highlight class="comment"></highlight></codeline>
<codeline lineno="324"><highlight class="comment">int<sp/>main(int<sp/>argc,<sp/>char<sp/>**argv)</highlight></codeline>
<codeline lineno="325"><highlight class="comment">{</highlight></codeline>
<codeline lineno="326"><highlight class="comment"><sp/><sp/><sp/>try<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>std::ofstream<sp/>oflog(&quot;testls.log&quot;,std::ios_base::out);</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>ConfigureLOG::Stream()<sp/>=<sp/>&amp;oflog;</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>ConfigureLOG::ReportLevels()<sp/>=<sp/>true;</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>ConfigureLOG::ReportTimeTags()<sp/>=<sp/>true;</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>ConfigureLOG::ReportingLevel()<sp/>=<sp/>ConfigureLOG::Level(&quot;VERBOSE&quot;);</highlight></codeline>
<codeline lineno="332"><highlight class="comment"></highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(INFO)<sp/>&lt;&lt;<sp/>&quot;In<sp/>main(),<sp/>level<sp/>is<sp/>&quot;</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>ConfigureLOG::ToString(ConfigureLOG::ReportingLevel());</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(INFO)<sp/>&lt;&lt;<sp/>&quot;This<sp/>is<sp/>an<sp/>INFO<sp/>message<sp/>in<sp/>main&quot;;</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(WARNING)<sp/>&lt;&lt;<sp/>&quot;This<sp/>is<sp/>a<sp/>WARNING<sp/>message<sp/>in<sp/>main&quot;;</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(ERROR)<sp/>&lt;&lt;<sp/>&quot;This<sp/>is<sp/>an<sp/>ERROR<sp/>message<sp/>in<sp/>main&quot;;</highlight></codeline>
<codeline lineno="338"><highlight class="comment"></highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>func();</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(INFO)<sp/>&lt;&lt;<sp/>&quot;In<sp/>main(),<sp/>level<sp/>is<sp/>&quot;</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>ConfigureLOG::ToString(ConfigureLOG::ReportingLevel());</highlight></codeline>
<codeline lineno="342"><highlight class="comment"></highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(INFO)<sp/>&lt;&lt;<sp/>&quot;Now<sp/>write<sp/>to<sp/>testls.new.log&quot;;</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>std::ofstream<sp/>oflognew(&quot;testls.new.log&quot;,std::ios_base::out);</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>ConfigureLOG::Stream()<sp/>=<sp/>&amp;oflognew;</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>ConfigureLOG::ReportTimeTags()<sp/>=<sp/>false;</highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(INFO)<sp/>&lt;&lt;<sp/>&quot;Change<sp/>the<sp/>level<sp/>to<sp/>DEBUG7<sp/>and<sp/>turn<sp/>off<sp/>time<sp/>tags&quot;;</highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>ConfigureLOG::ReportingLevel()<sp/>=<sp/>ConfigureLOG::FromString(&quot;DEBUG7&quot;);</highlight></codeline>
<codeline lineno="349"><highlight class="comment"></highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(INFO)<sp/>&lt;&lt;<sp/>&quot;This<sp/>is<sp/>file<sp/>testls.new.log&quot;;</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(INFO)<sp/>&lt;&lt;<sp/>&quot;In<sp/>main(),<sp/>level<sp/>is<sp/>now<sp/>&quot;</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>ConfigureLOG::ToString(ConfigureLOG::ReportingLevel());</highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(DEBUG)<sp/>&lt;&lt;<sp/>&quot;DEBUG<sp/>message&quot;;</highlight></codeline>
<codeline lineno="354"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(DEBUG1)<sp/>&lt;&lt;<sp/>&quot;DEBUG1<sp/>message&quot;;</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(DEBUG2)<sp/>&lt;&lt;<sp/>&quot;DEBUG2<sp/>message&quot;;</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(DEBUG3)<sp/>&lt;&lt;<sp/>&quot;DEBUG3<sp/>message&quot;;</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(DEBUG4)<sp/>&lt;&lt;<sp/>&quot;DEBUG4<sp/>message&quot;;</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(DEBUG5)<sp/>&lt;&lt;<sp/>&quot;DEBUG5<sp/>message&quot;;</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(DEBUG6)<sp/>&lt;&lt;<sp/>&quot;DEBUG6<sp/>message&quot;;</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(DEBUG7)<sp/>&lt;&lt;<sp/>&quot;DEBUG7<sp/>message&quot;;</highlight></codeline>
<codeline lineno="361"><highlight class="comment"></highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(INFO)<sp/>&lt;&lt;<sp/>&quot;Now<sp/>go<sp/>back<sp/>to<sp/>the<sp/>original<sp/>log<sp/>file&quot;;</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>ConfigureLOG::Stream()<sp/>=<sp/>&amp;oflog;</highlight></codeline>
<codeline lineno="364"><highlight class="comment"></highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(INFO)<sp/>&lt;&lt;<sp/>&quot;This<sp/>is<sp/>file<sp/>testls.log<sp/>again&quot;;</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(INFO)<sp/>&lt;&lt;<sp/>&quot;In<sp/>main(),<sp/>level<sp/>is<sp/>now<sp/>&quot;</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>ConfigureLOG::ToString(ConfigureLOG::ReportingLevel());</highlight></codeline>
<codeline lineno="368"><highlight class="comment"></highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(INFO)<sp/>&lt;&lt;<sp/>&quot;Change<sp/>the<sp/>level<sp/>to<sp/>DEBUG3<sp/>and<sp/>turn<sp/>on<sp/>time<sp/>tags&quot;;</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>ConfigureLOG::ReportTimeTags()<sp/>=<sp/>true;</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>ConfigureLOG::ReportingLevel()<sp/>=<sp/>ConfigureLOG::FromString(&quot;DEBUG3&quot;);</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(DEBUG)<sp/>&lt;&lt;<sp/>&quot;DEBUG<sp/>message&quot;;</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(DEBUG1)<sp/>&lt;&lt;<sp/>&quot;DEBUG1<sp/>message&quot;;</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(DEBUG2)<sp/>&lt;&lt;<sp/>&quot;DEBUG2<sp/>message&quot;;</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(DEBUG3)<sp/>&lt;&lt;<sp/>&quot;DEBUG3<sp/>message&quot;;</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(DEBUG4)<sp/>&lt;&lt;<sp/>&quot;DEBUG4<sp/>message&quot;;</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(DEBUG5)<sp/>&lt;&lt;<sp/>&quot;DEBUG5<sp/>message&quot;;</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(DEBUG6)<sp/>&lt;&lt;<sp/>&quot;DEBUG6<sp/>message&quot;;</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>LOG(DEBUG7)<sp/>&lt;&lt;<sp/>&quot;DEBUG7<sp/>message&quot;;</highlight></codeline>
<codeline lineno="380"><highlight class="comment"></highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>0;</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/><sp/><sp/>catch(std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>&quot;Exception:<sp/>&quot;<sp/>&lt;&lt;<sp/>e.what()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/><sp/><sp/>catch(...)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>&quot;Unknown<sp/>exception&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/><sp/><sp/>return<sp/>1;</highlight></codeline>
<codeline lineno="390"><highlight class="comment">}</highlight></codeline>
<codeline lineno="391"><highlight class="comment">//<sp/>testls0.cpp</highlight></codeline>
<codeline lineno="392"><highlight class="comment">#include<sp/>&quot;logstream.hpp&quot;</highlight></codeline>
<codeline lineno="393"><highlight class="comment"></highlight></codeline>
<codeline lineno="394"><highlight class="comment">void<sp/>func(void)</highlight></codeline>
<codeline lineno="395"><highlight class="comment">{</highlight></codeline>
<codeline lineno="396"><highlight class="comment"><sp/><sp/><sp/>LOG(INFO)<sp/>&lt;&lt;<sp/>&quot;Here<sp/>in<sp/>func(),<sp/>level<sp/>is<sp/>&quot;</highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>ConfigureLOG::ToString(ConfigureLOG::ReportingLevel());</highlight></codeline>
<codeline lineno="398"><highlight class="comment"><sp/><sp/><sp/>LOG(DEBUG)<sp/>&lt;&lt;<sp/>&quot;This<sp/>is<sp/>a<sp/>debug<sp/>statement<sp/>inside<sp/>func()&quot;;</highlight></codeline>
<codeline lineno="399"><highlight class="comment"></highlight></codeline>
<codeline lineno="400"><highlight class="comment"><sp/><sp/><sp/>LOG(INFO)<sp/>&lt;&lt;<sp/>&quot;Change<sp/>the<sp/>level<sp/>to<sp/>DEBUG7&quot;;</highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/><sp/><sp/>ConfigureLOG::ReportingLevel()<sp/>=<sp/>ConfigureLOG::FromString(&quot;DEBUG7&quot;);</highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/><sp/><sp/>LOG(DEBUG5)<sp/>&lt;&lt;<sp/>&quot;DEBUG5<sp/>message&quot;;</highlight></codeline>
<codeline lineno="403"><highlight class="comment"><sp/><sp/><sp/>LOG(DEBUG6)<sp/>&lt;&lt;<sp/>&quot;DEBUG6<sp/>message&quot;;</highlight></codeline>
<codeline lineno="404"><highlight class="comment"><sp/><sp/><sp/>LOG(DEBUG7)<sp/>&lt;&lt;<sp/>&quot;DEBUG7<sp/>message&quot;;</highlight></codeline>
<codeline lineno="405"><highlight class="comment"><sp/><sp/><sp/>LOG(INFO)<sp/>&lt;&lt;<sp/>&quot;Change<sp/>the<sp/>level<sp/>to<sp/>DEBUG&quot;;</highlight></codeline>
<codeline lineno="406"><highlight class="comment"><sp/><sp/><sp/>ConfigureLOG::ReportingLevel()<sp/>=<sp/>ConfigureLOG::FromString(&quot;DEBUG&quot;);</highlight></codeline>
<codeline lineno="407"><highlight class="comment"><sp/><sp/><sp/>LOG(INFO)<sp/>&lt;&lt;<sp/>&quot;Leaving<sp/>func()&quot;;</highlight></codeline>
<codeline lineno="408"><highlight class="comment">}</highlight></codeline>
<codeline lineno="409"><highlight class="comment">//<sp/>execution:</highlight></codeline>
<codeline lineno="410"><highlight class="comment">C:\&gt;testls</highlight></codeline>
<codeline lineno="411"><highlight class="comment"></highlight></codeline>
<codeline lineno="412"><highlight class="comment">C:\&gt;cat<sp/>testls.log</highlight></codeline>
<codeline lineno="413"><highlight class="comment">20:56:30.353<sp/>INFO:<sp/>In<sp/>main(),<sp/>level<sp/>is<sp/>VERBOSE</highlight></codeline>
<codeline lineno="414"><highlight class="comment">20:56:30.353<sp/>INFO:<sp/>This<sp/>is<sp/>an<sp/>INFO<sp/>message<sp/>in<sp/>main</highlight></codeline>
<codeline lineno="415"><highlight class="comment">20:56:30.353<sp/>WARNING:<sp/>This<sp/>is<sp/>a<sp/>WARNING<sp/>message<sp/>in<sp/>main</highlight></codeline>
<codeline lineno="416"><highlight class="comment">20:56:30.353<sp/>ERROR:<sp/>This<sp/>is<sp/>an<sp/>ERROR<sp/>message<sp/>in<sp/>main</highlight></codeline>
<codeline lineno="417"><highlight class="comment">20:56:30.353<sp/>INFO:<sp/>Here<sp/>in<sp/>func(),<sp/>level<sp/>is<sp/>VERBOSE</highlight></codeline>
<codeline lineno="418"><highlight class="comment">20:56:30.353<sp/>INFO:<sp/>Change<sp/>the<sp/>level<sp/>to<sp/>DEBUG7</highlight></codeline>
<codeline lineno="419"><highlight class="comment">20:56:30.353<sp/>DEBUG5:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG5<sp/>message</highlight></codeline>
<codeline lineno="420"><highlight class="comment">20:56:30.353<sp/>DEBUG6:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG6<sp/>message</highlight></codeline>
<codeline lineno="421"><highlight class="comment">20:56:30.353<sp/>DEBUG7:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG7<sp/>message</highlight></codeline>
<codeline lineno="422"><highlight class="comment">20:56:30.353<sp/>INFO:<sp/>Change<sp/>the<sp/>level<sp/>to<sp/>DEBUG</highlight></codeline>
<codeline lineno="423"><highlight class="comment">20:56:30.353<sp/>INFO:<sp/>Leaving<sp/>func()</highlight></codeline>
<codeline lineno="424"><highlight class="comment">20:56:30.353<sp/>INFO:<sp/>In<sp/>main(),<sp/>level<sp/>is<sp/>DEBUG</highlight></codeline>
<codeline lineno="425"><highlight class="comment">20:56:30.353<sp/>INFO:<sp/>Now<sp/>write<sp/>to<sp/>testls.new.log</highlight></codeline>
<codeline lineno="426"><highlight class="comment">INFO:<sp/>This<sp/>is<sp/>file<sp/>testls.log<sp/>again</highlight></codeline>
<codeline lineno="427"><highlight class="comment">INFO:<sp/>In<sp/>main(),<sp/>level<sp/>is<sp/>now<sp/>DEBUG7</highlight></codeline>
<codeline lineno="428"><highlight class="comment">INFO:<sp/>Change<sp/>the<sp/>level<sp/>to<sp/>DEBUG3<sp/>and<sp/>turn<sp/>on<sp/>time<sp/>tags</highlight></codeline>
<codeline lineno="429"><highlight class="comment">20:56:30.353<sp/>DEBUG:<sp/>DEBUG<sp/>message</highlight></codeline>
<codeline lineno="430"><highlight class="comment">20:56:30.353<sp/>DEBUG1:<sp/><sp/><sp/>DEBUG1<sp/>message</highlight></codeline>
<codeline lineno="431"><highlight class="comment">20:56:30.353<sp/>DEBUG2:<sp/><sp/><sp/><sp/><sp/>DEBUG2<sp/>message</highlight></codeline>
<codeline lineno="432"><highlight class="comment">20:56:30.353<sp/>DEBUG3:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG3<sp/>message</highlight></codeline>
<codeline lineno="433"><highlight class="comment"></highlight></codeline>
<codeline lineno="434"><highlight class="comment">C:\&gt;cat<sp/>testls.new.log</highlight></codeline>
<codeline lineno="435"><highlight class="comment">INFO:<sp/>Change<sp/>the<sp/>level<sp/>to<sp/>DEBUG7<sp/>and<sp/>turn<sp/>off<sp/>time<sp/>tags</highlight></codeline>
<codeline lineno="436"><highlight class="comment">INFO:<sp/>This<sp/>is<sp/>file<sp/>testls.new.log</highlight></codeline>
<codeline lineno="437"><highlight class="comment">INFO:<sp/>In<sp/>main(),<sp/>level<sp/>is<sp/>now<sp/>DEBUG7</highlight></codeline>
<codeline lineno="438"><highlight class="comment">DEBUG:<sp/>DEBUG<sp/>message</highlight></codeline>
<codeline lineno="439"><highlight class="comment">DEBUG1:<sp/><sp/><sp/>DEBUG1<sp/>message</highlight></codeline>
<codeline lineno="440"><highlight class="comment">DEBUG2:<sp/><sp/><sp/><sp/><sp/>DEBUG2<sp/>message</highlight></codeline>
<codeline lineno="441"><highlight class="comment">DEBUG3:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG3<sp/>message</highlight></codeline>
<codeline lineno="442"><highlight class="comment">DEBUG4:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG4<sp/>message</highlight></codeline>
<codeline lineno="443"><highlight class="comment">DEBUG5:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG5<sp/>message</highlight></codeline>
<codeline lineno="444"><highlight class="comment">DEBUG6:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG6<sp/>message</highlight></codeline>
<codeline lineno="445"><highlight class="comment">DEBUG7:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG7<sp/>message</highlight></codeline>
<codeline lineno="446"><highlight class="comment">INFO:<sp/>Now<sp/>go<sp/>back<sp/>to<sp/>the<sp/>original<sp/>log<sp/>file</highlight></codeline>
<codeline lineno="447"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/asymingt/Dropbox/Documents/UCL/Research/Simulator/uas_framework/thirdparty/gpstk/lib/Geomatics/logstream.hpp"/>
  </compounddef>
</doxygen>
