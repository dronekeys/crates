#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass report
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Quadrotors Platform
\end_layout

\begin_layout Author
Andrew Symington
\end_layout

\begin_layout Address
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Abstract
This document accompanies the
\end_layout

\begin_layout Chapter
Overview
\end_layout

\begin_layout Section
Overview
\end_layout

\begin_layout Standard
This document describes a software framework that emerged within the EU-funded
 CompLACS research project as a means to connect machine learning theory
 with practical hardware experiments.
 The quadrotor platform is one of three experimental platforms, and we encourage
 the reader to visit complacs.org for more information about the other two
 platforms.
\end_layout

\begin_layout Standard
Quadrotor experiments are particularly challenging, as there are significant
 safety, cost and practical considerations that must be taken into account.
 These challenges were idetified early in the project, and the decision
 was made to develop a high-fidelity quadrotor simulation framework in which
 to prototype machine learning algorithms.
 By the end of the second year or the project a Matlab simulator had been
 developed, along with four key test scenrios.
\end_layout

\begin_layout Enumerate
Seamlessly integrating simulation and experiments.
\end_layout

\begin_layout Enumerate
Solving architectural and performance issues.
\end_layout

\begin_layout Enumerate
Integration with the wider robotics community
\end_layout

\begin_layout Standard
The framework itself is built upon two key software libraries -- the Robotic
 Operating System (ROS) and the Gazebo simulator.
 The
\end_layout

\begin_layout Section
Modelling conventions
\end_layout

\begin_layout Standard
It is impossible to discuss the system without first specifying the units
 and coordinate frame conventions that it uses.
 We have adopted the conventions used in the Gazebo simulator, which are
 extensions to those typically used in 3D modelling.
 Importantly, these conventions differ from those used in aviation.
\end_layout

\begin_layout Subsection
Units
\end_layout

\begin_layout Standard
For consistency, The entire framework adopts SI conventions in order to
 be as.
 Distance is measured in meters and angles are measured in radians.
 Temperature, pressure and relative humidity are measured in degrees Kelvin,
 millibars and percentages respectively.
\end_layout

\begin_layout Subsection
Coordinate frames
\end_layout

\begin_layout Standard
For modelling convenience we have chosen to represent the quadrotor as a
 rigid body with six degrees of freedom in three dimensional space.
 Describing its motion requires the use of three coordinate frames.
\end_layout

\begin_layout Subsubsection
Body frame
\end_layout

\begin_layout Standard
This is a coordinate frame
\end_layout

\begin_layout Subsubsection
Navigation frame
\end_layout

\begin_layout Standard
Local tangent plane
\end_layout

\begin_layout Subsubsection
Resolving frame
\end_layout

\begin_layout Standard
In order for a quadrotor to close the loop of its position controller, it
 requires absolute measurements of its position.
 Indoor quadrotor experiments typically use motion capture systems to achieve
 millimeter precsi
\end_layout

\begin_layout Standard
In order for a quadrotor to obtain a navigation solut
\end_layout

\begin_layout Standard
Global navigation satellite systems (GNSS) such as Galileo, GPS and Glonass
 require the use of spherical coordinate system
\end_layout

\begin_layout Section
Architecture
\end_layout

\begin_layout Standard
Quadrotors are naturally unstable platforms, and stability is achieved through
 the use of a flight control system (FCS).
 The FCS generally accepts control in the form of roll, pitch, yaw and throttle
\end_layout

\begin_layout Standard
The FCS typically has an inertial measurement unit, which provides measurements
 of angular velocity and linear acceleration.
 
\end_layout

\begin_layout Section
State
\end_layout

\begin_layout Section
How to read this document
\end_layout

\begin_layout Standard
The objective of this document is to be as readable as possible.
 To do so we have made the assumption that, as a reader, you fall into one
 of three different categories.
\end_layout

\begin_layout Chapter
Usage guide
\end_layout

\begin_layout Standard
A
\end_layout

\begin_layout Chapter
Developer guide
\end_layout

\begin_layout Standard
A
\end_layout

\begin_layout Chapter
Modelling details
\end_layout

\end_body
\end_document
