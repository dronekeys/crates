/**
\mainpage The Quadrotor HAL
Quadrotor experiments are particularly challenging, given the significant safety, cost and practical considerations that must be taken into account. These challenges were identified early in the project, and the decision was made to develop a high-fidelity quadrotor simulation framework in which to prototype machine learning algorithms. By the end of the second year of the project a Matlab simulator had been developed, along with four key scenarios.


 The Quadrotor HAL provides a toolchain for efficiently prototyping controllers for multi-platform robotic experiments, by improving the process by which simulations are translated to hardware experiments. This is achieved by nesting simulated and actual platform code within a single framework. Both implementations inherit common, core functionality from a hardware abstraction layer (HAL). The HAL exposes the underlying device -- be it simulated or actual hardware -- as a generic class of robot that can be interacted with over a messaging infrastructure. This loose coupling allows the complexity of the underlying platform to be hidden from the cognitive controller, keeping the research focus on the design of the application-level controller rather than low-level implementation details. The framework makes use of the open source Robotics Operating System (ROS) and Gazebo simulator, both of which have received significant commercial and community support over the last few years. Although we envision it having a broader impact in the robotics community, in the first instance the framework is geared towards controlling swarms of quadrotors. It is therefore distributed with a quadrotor HAL and drivers for the Ascending Technologies flight control system. In addition, the distribution includes simulator plugins for environmental conditions (meteorological, wind turbulence, satellite vehicle orbits) and sensors (inertial, magnetic, barometric altitude, satellite navigation receiver). The contribution being a complete toolkit for high-fidelity, outdoor, multi-platform quadrotor simulation and experimentation. By releasing this framework to the robotics community as an open source project, we hope that others will share in our vision and contribute to the project. The ultimate goal being to develop a rich tool set, which lowers the barrier to running application-level algorithms on multi-robot systems. 
*/